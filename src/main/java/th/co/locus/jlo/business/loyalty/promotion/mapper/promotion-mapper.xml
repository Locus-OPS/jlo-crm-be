<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="promotion">
	
	<!-- ############################# Program ############################# -->
	<select id="getPromotionList" resultType="PromotionModelBean"> 
       		SELECT P.PROMOTION_ID
				, P.PROGRAM_ID
                , PG.PROGRAM_NAME AS PROGRAM
				, P.PROMOTION_NAME AS PROMOTION
				, P.PROMOTION_TYPE AS PROMOTION_TYPE_ID
				, CB1.CODE_NAME AS PROMOTION_TYPE
				, P.START_DATE
				, P.END_DATE
				, P.PROMOTION_RECEIVE_TIME_LIMIT
				, P.REMARK
				, P.ACTIVE_FLAG
				, P.BASE_FLAG
				, P.USE_BASE_POINT_FLAG
				, P.DELETE_FLAG
				, P.PRODUCT_INCLUSION AS PRODUCT_INCLUSION_ID 
				, P.PRODUCT_LIST_ID
				, P.MEMBER_INCLUSION AS MEMBER_INCLUSION_ID
				, P.MEMBER_LIST_ID
				, P.CAP_TYPE AS CAP_TYPE_ID
				, P.MIN_CAP
				, P.MAX_CAP
				, P.SHOP_INCLUSION AS SHOP_INCLUSION_ID 
				, P.SHOP_LIST_ID
				, P.PROMOTION_ATT_ID
				, P.CREATED_DATE
				, P.CREATED_BY
				, P.UPDATED_DATE
				, P.UPDATED_BY 
			FROM LOY_PROMOTION P
			LEFT JOIN TB_CODEBOOK CB1 ON CB1.CODE_ID = P.PROMOTION_TYPE  AND CB1.CODE_TYPE = 'PROMOTION_TYPE'
            LEFT JOIN LOY_PROGRAM PG ON PG.PROGRAM_ID = P.PROGRAM_ID
		<where>	
		  	<if test="programId != null">
		    	P.PROGRAM_ID = #{programId}
		  	</if>
		  	<if test="promotionId != null">
		    	AND P.PROMOTION_ID = #{promotionId}
		  	</if>
		  	<if test="buId != null">
		    	AND P.BU_ID = #{buId}
		  	</if>
		  	<if test="promotion != null">
		    	<bind name="promotion" value="'%' + promotion + '%'" />
		    	AND P.PROMOTION_NAME LIKE #{promotion} 
		  	</if>
		  	<if test="promotionTypeId != null">
		    	AND P.PROMOTION_TYPE = #{promotionTypeId} 
		  	</if>
		  	<if test="activeFlag != null">
		    	AND P.ACTIVE_FLAG = #{activeFlag} 
		  	</if>
		  	<if test="deleteFlag != null">
		    	AND P.DELETE_FLAG = #{deleteFlag} 
		  	</if>
		  	<if test="baseFlag != null">
		    	AND P.BASE_FLAG = #{baseFlag} 
		  	</if>
		  	<if test="promotionDuplicate != null">
		    	AND P.PROMOTION_NAME = #{promotionDuplicate} 
		  	</if>
	  	</where>		
		<choose>
			<when test="sortColumn != null">
		  		<if test="sortColumn == 'startDate'">
		  			ORDER BY P.START_DATE ${sortDirection}	  	
		  		</if>
		  	</when>
		  	<otherwise>
		  		ORDER BY P.START_DATE DESC  	
		  	</otherwise>
	  	</choose>
	</select>
	<select id="findPromotionById" resultType="PromotionModelBean">
			SELECT P.PROMOTION_ID
				, P.PROGRAM_ID
                , PG.PROGRAM_NAME AS PROGRAM
				, P.PROMOTION_NAME AS PROMOTION
				, P.PROMOTION_TYPE AS PROMOTION_TYPE_ID
				, CB1.CODE_NAME AS PROMOTION_TYPE
				, P.START_DATE
				, P.END_DATE
				, P.PROMOTION_RECEIVE_TIME_LIMIT
				, P.REMARK
				, P.ACTIVE_FLAG
				, P.BASE_FLAG
				, P.USE_BASE_POINT_FLAG
				, P.DELETE_FLAG
				, P.PRODUCT_INCLUSION AS PRODUCT_INCLUSION_ID 
				, P.PRODUCT_LIST_ID
				, P.MEMBER_INCLUSION AS MEMBER_INCLUSION_ID
				, P.MEMBER_LIST_ID
				, P.CAP_TYPE AS CAP_TYPE_ID
				, P.MIN_CAP
				, P.MAX_CAP
				, P.SHOP_INCLUSION AS SHOP_INCLUSION_ID 
				, P.SHOP_LIST_ID
				, P.PROMOTION_ATT_ID
				, P.CREATED_DATE
				, P.CREATED_BY
				, P.UPDATED_DATE
				, P.UPDATED_BY 
			FROM LOY_PROMOTION P
			LEFT JOIN TB_CODEBOOK CB1 ON CB1.CODE_ID = P.PROMOTION_TYPE  AND CB1.CODE_TYPE = 'PROMOTION_TYPE'
            LEFT JOIN LOY_PROGRAM PG ON PG.PROGRAM_ID = P.PROGRAM_ID
            WHERE P.PROMOTION_ID = #{promotionId}
	</select>
		
	<insert id="createPromotion" keyColumn="PROMOTION_ID" keyProperty="promotionId" useGeneratedKeys="true">
				INSERT INTO LOY_PROMOTION (
					 PROGRAM_ID
					, PROMOTION_NAME
					, PROMOTION_TYPE
					, START_DATE
					, END_DATE
					, PROMOTION_RECEIVE_TIME_LIMIT
					, REMARK
					, ACTIVE_FLAG
					, BASE_FLAG
					, USE_BASE_POINT_FLAG
					, DELETE_FLAG
					, PRODUCT_INCLUSION
					, MEMBER_INCLUSION
					, SHOP_INCLUSION
					, CAP_TYPE
					, MIN_CAP
					, MAX_CAP
					, CREATED_DATE
					, CREATED_BY
					, UPDATED_DATE
					, UPDATED_BY
					, BU_ID
				) VALUES (
				    #{programId}
				   ,#{promotion}
				   ,#{promotionTypeId}
		           ,#{startDate}
		           ,#{endDate}
		           ,#{promotionReceiveTimeLimit}
		           ,#{remark}
		           ,#{activeFlag}
		           ,#{baseFlag}
		           ,#{useBasePointFlag}
				   , 'N'
		           ,#{productInclusionId}
		           ,#{memberInclusionId}
		           ,#{shopInclusionId}
		           ,#{capTypeId}
		           ,#{minCap}
		           ,#{maxCap}
		           ,NOW()
		           ,#{createdBy}
		           ,NOW()
		           ,#{updatedBy}
		           , #{buId}
		        )
	</insert>
	
	<update id="updatePromotion">
				UPDATE LOY_PROMOTION 
				SET 
					  PROMOTION_NAME = #{promotion} 
					, PROGRAM_ID = #{programId}
					, PROMOTION_TYPE = #{promotionTypeId}
					, START_DATE = #{startDate}
					, END_DATE = #{endDate}
					, PROMOTION_RECEIVE_TIME_LIMIT = #{promotionReceiveTimeLimit}
					, REMARK = #{remark}
					, ACTIVE_FLAG = #{activeFlag}
					, BASE_FLAG = #{baseFlag}
					, USE_BASE_POINT_FLAG = #{useBasePointFlag}
					, PRODUCT_INCLUSION = #{productInclusionId}
					, MEMBER_INCLUSION = #{memberInclusionId}
					, SHOP_INCLUSION = #{shopInclusionId}
					, CAP_TYPE = #{capTypeId}
					, MIN_CAP = #{minCap}
					, MAX_CAP = #{maxCap}
				    , UPDATED_DATE = NOW()
				    , UPDATED_BY = #{updatedBy}
				WHERE PROMOTION_ID = #{promotionId}
	</update>
		
	<update id="updatePromotionDeleteFlag">
				UPDATE LOY_PROMOTION 
				SET   DELETE_FLAG = #{deleteFlag}
					, UPDATED_DATE = NOW()
				    , UPDATED_BY = #{updatedBy}
				WHERE PROMOTION_ID = #{promotionId}
	</update>
	
	<delete id="deletePromotion">
				DELETE FROM LOY_PROMOTION WHERE PROMOTION_ID = #{promotionId}
	</delete> 	
	
	<!-- ############################# Rule ############################# -->
	<select id="getRuleList" resultType="RuleModelBean"> 
			SELECT R.RULE_ID
				, R.PROMOTION_ID
				, P.PROMOTION_NAME AS PROMOTION
				, P.ACTIVE_FLAG
				, PG.PROGRAM_ID
				, PG.PROGRAM_NAME AS PROGRAM
				, R.SEQ
				, R.RULE_NAME AS RULE
				, R.RULE_QUERY
				, R.RULE_JOIN
				, R.RULE_COUNT
				, R.CREATED_DATE
				, R.CREATED_BY
				, R.UPDATED_DATE
				, R.UPDATED_BY 
			FROM LOY_PROMOTION_RULES R
			INNER JOIN LOY_PROMOTION P  ON P.PROMOTION_ID = R.PROMOTION_ID
			INNER JOIN LOY_PROGRAM PG  ON PG.PROGRAM_ID = P.PROGRAM_ID
		<where>	
		  	<if test="promotionId != null">
		    	R.PROMOTION_ID = #{promotionId}
		  	</if>
		  	<if test="ruleId != null">
		    	AND R.RULE_ID = #{ruleId}
		  	</if>
		  	<if test="buId != null">
		    	AND P.BU_ID = #{buId}
		  	</if>
	  	</where>		
		<choose>
			<when test="sortColumn != null">
		  		<if test="sortColumn == 'seq'">
		  			ORDER BY R.SEQ ${sortDirection}	  	
		  		</if>
		  	</when>
		  	<otherwise>
		  		ORDER BY R.SEQ ASC	
		  	</otherwise>
	  	</choose>
	</select>
	<select id="findRuleById" resultType="RuleModelBean">
			SELECT R.RULE_ID
				, R.PROMOTION_ID
				, P.PROMOTION_NAME AS PROMOTION
				, P.ACTIVE_FLAG
				, PG.PROGRAM_ID
				, PG.PROGRAM_NAME AS PROGRAM
				, R.SEQ
				, R.RULE_NAME AS RULE
				, R.RULE_QUERY
				, R.RULE_JOIN
				, R.RULE_COUNT
				, R.CREATED_DATE
				, R.CREATED_BY
				, R.UPDATED_DATE
				, R.UPDATED_BY 
			FROM LOY_PROMOTION_RULES R
			INNER JOIN LOY_PROMOTION P  ON P.PROMOTION_ID = R.PROMOTION_ID
			INNER JOIN LOY_PROGRAM PG  ON PG.PROGRAM_ID = P.PROGRAM_ID
			WHERE R.RULE_ID = #{ruleId}
	</select>
	<insert id="createRule" keyColumn="RULE_ID" keyProperty="ruleId" useGeneratedKeys="true">
			 INSERT INTO LOY_PROMOTION_RULES ( 
				 PROMOTION_ID
			   , SEQ
	           , RULE_NAME
	           , CREATED_DATE
	           , CREATED_BY
	           , UPDATED_DATE
	           , UPDATED_BY
		     ) VALUES (
	             #{promotionId}
	           , #{seq}
	           , #{rule}
	           , NOW()
	           , #{createdBy}
	           , NOW()
	           , #{updatedBy}
	         )
	</insert>
	<update id="updateRule">
			 UPDATE LOY_PROMOTION_RULES
			 SET    RULE_NAME = #{rule}
			      , UPDATED_DATE = NOW()
			      , UPDATED_BY = #{updatedBy}
			 WHERE RULE_ID = #{ruleId}
	</update>
	<select id="getNextSeq" resultType="Long">
			SELECT IFNULL(
	        	( SELECT  (SEQ + 1) AS SEQ 
					FROM LOY_PROMOTION_RULES 
					WHERE PROMOTION_ID = #{promotionId} ORDER BY SEQ DESC LIMIT 1
				),
			'1') AS SEQ
	</select>
	<update id="updateOldSeq">
			 UPDATE LOY_PROMOTION_RULES  
			 SET SEQ = #{seq}  
			 WHERE SEQ = #{newSeq} AND PROMOTION_ID = #{promotionId}

	</update>
	<update id="updateNewSeq">
			UPDATE LOY_PROMOTION_RULES 
		  	SET SEQ = #{newSeq}  
		  	WHERE RULE_ID = #{ruleId}
	</update>
	<update id="updateSeqBeforeDelete">
			UPDATE LOY_PROMOTION_RULES 
			SET SEQ = SEQ - 1
			WHERE SEQ > #{seq} AND PROMOTION_ID = #{promotionId}
	</update>
	<delete id="deleteRule">
			DELETE FROM LOY_PROMOTION_RULES WHERE RULE_ID = #{ruleId}
	</delete>
	
	<!-- ############################# Rule Criteria ############################# -->
	
	<select id="getRuleCriteriaList" resultType="RuleCriteriaModelBean"> 
			SELECT CRITERIA_ID
				,RULE_ID
				,DESCRIPTION
				,EXP
				,SRC_OBJ
				,SRC_ATTR
				,SRC_CONDITION
				,COMPARE_TO_OV 
				,DSC_OBJ 
				,DSC_ATTR 
				,DSC_OPERATOR 
				,DSC_VALUE 
				,DSC_VALUE_EXP 
				,LOV_NAME AS LOV
				,CREATED_BY
				,CREATED_DATE
				,UPDATED_BY
				,UPDATED_DATE
			FROM LOY_PROMOTION_CRITERIA 
			WHERE RULE_ID = #{ruleId}
	</select>
	<select id="findRuleCriteriaById" resultType="RuleCriteriaModelBean"> 
			SELECT CRITERIA_ID
				,RULE_ID
				,DESCRIPTION
				,EXP
				,SRC_OBJ
				,SRC_ATTR
				,SRC_CONDITION
				,COMPARE_TO_OV 
				,DSC_OBJ 
				,DSC_ATTR 
				,DSC_OPERATOR 
				,DSC_VALUE 
				,DSC_VALUE_EXP 
				,LOV_NAME AS LOV
				,CREATED_BY
				,CREATED_DATE
				,UPDATED_BY
				,UPDATED_DATE
			FROM LOY_PROMOTION_CRITERIA 
			WHERE CRITERIA_ID = #{criteriaId}
	</select>
	<insert id="createRuleCriteria" keyColumn="CRITERIA_ID" keyProperty="criteriaId" useGeneratedKeys="true">
			 INSERT INTO LOY_PROMOTION_CRITERIA ( 
				 RULE_ID
				,DESCRIPTION
				,EXP
				,SRC_OBJ
				,SRC_ATTR
				,SRC_CONDITION
				,COMPARE_TO_OV
				,DSC_OBJ
				,DSC_ATTR
				,DSC_OPERATOR
				,DSC_VALUE
				,DSC_VALUE_EXP
				,LOV_NAME
				,CREATED_DATE
				,CREATED_BY
				,UPDATED_DATE
				,UPDATED_BY
			) VALUES (
				 #{ruleId}
				,#{description}
				,#{exp}
				,#{srcObj}
				,#{srcAttr}
				,#{srcCondition}
				,#{compareToOv}
				,#{dscObj}
				,#{dscAttr}
				,#{dscOperator}
				,#{dscValue}
				,#{dscValueExp}
				,#{lov}
				,NOW()
				,#{createdBy}
				,NOW()
				,#{updatedBy}
			)
	</insert>
	<update id="updateRuleCriteria">
			UPDATE LOY_PROMOTION_CRITERIA 
			SET
				 RULE_ID = #{ruleId}
				,DESCRIPTION = #{description}
				,EXP = #{exp}
				,SRC_OBJ = #{srcObj}
				,SRC_ATTR = #{srcAttr}
				,SRC_CONDITION = #{srcCondition}
				,COMPARE_TO_OV = #{compareToOv}
				,DSC_OBJ = #{dscObj}
				,DSC_ATTR = #{dscAttr}
				,DSC_OPERATOR = #{dscOperator}
				,DSC_VALUE = #{dscValue}
				,DSC_VALUE_EXP = #{dscValueExp}
				,LOV_NAME = #{lov}
				,UPDATED_DATE = NOW()
				,UPDATED_BY = #{updatedBy}
			WHERE CRITERIA_ID = #{criteriaId}
	</update>
	<delete id="deleteRuleCriteria">
			DELETE FROM LOY_PROMOTION_CRITERIA WHERE 
			CRITERIA_ID = #{criteriaId}
	</delete>
	<select id="getRuleCriteriaForRuleBuild" resultType="RuleCriteriaModelBean"> 
			SELECT 				
				A.CRITERIA_ID 
				, A.RULE_ID 
				, A.DESCRIPTION 
				, A.EXP 
				, A.SRC_OBJ 
				, A.SRC_ATTR 
				, A.SRC_CONDITION 
				, A.COMPARE_TO_OV 
				, A.DSC_OBJ 
				, A.DSC_ATTR 
				, A.DSC_OPERATOR 
				, A.DSC_VALUE 
				, A.DSC_VALUE_EXP 
				, A.LOV_NAME AS lov
				, B.OBJECT_NAME AS SRC_OBJECT_NAME
				, B.FIELD_NAME AS SRC_FIELD_NAME
				, B.DATA_TYPE AS SRC_DATA_TYPE
				, C.OBJECT_NAME AS DSC_OBJECT_NAME
				, C.FIELD_NAME AS DSC_FIELD_NAME
				, C.DATA_TYPE AS DSC_DATA_TYPE
			FROM LOY_PROMOTION_CRITERIA A 
			LEFT JOIN LOY_ATTRIBUTE B  ON A.SRC_ATTR = B.ATTR_ID AND A.SRC_OBJ = B.ATTR_GROUP_ID
			LEFT JOIN LOY_ATTRIBUTE C  ON A.DSC_ATTR = C.ATTR_ID AND A.DSC_OBJ = C.ATTR_GROUP_ID
			WHERE A.RULE_ID = #{ruleId}	
	</select>
	<update id="updateRuleQueryJoin">
			UPDATE LOY_PROMOTION_RULES
			SET
				  RULE_QUERY = #{ruleQuery}
				, RULE_JOIN = #{ruleJoin}
			WHERE 
				RULE_ID = #{ruleId}	
	</update>
	<select id="getAttrByIdList" resultType="ProgramAttributeModelBean"> 
			SELECT 
				  A.ATTR_ID 
				, A.ATTR_NAME
				, A.ATTR_GROUP_ID 
				, B.ATTR_GROUP_NAME
				
			FROM LOY_ATTRIBUTE A  
			INNER JOIN LOY_ATTRIBUTE_GROUP B  
			ON A.ATTR_GROUP_ID = B.ATTR_GROUP_ID 
			WHERE ATTR_ID IN
			  <foreach item="idList" index="index" collection="idList"
			      open="(" separator="," close=")">
			        #{idList}
			  </foreach>
	</select>
	
	<!-- ############################# Rule Action ############################# -->
	<select id="getRuleActionList" resultType="RuleActionModelBean"> 
			SELECT ACTION_ID 
				,RULE_ID 
				,ACTION_TYPE 
				,ACTION_DETAIL
				,POINT_TYPE 
				,POINT_OPERATOR 
				,POINT_VALUE 
				,POINT_EXPIRE_UNIT 
				,POINT_EXPIRE_PERIOD 
				,UPD_OBJ 
				,UPD_ATTR 
				,UPD_OPERATOR 
				,WITH_OBJ 
				,WITH_ATTR 
				,WITH_OPRERATOR AS WITH_OPERATOR 
				,WITH_VALUE 
				,EXP
				,CREATED_DATE
				,CREATED_BY
				,UPDATED_DATE
				,UPDATED_BY
			FROM LOY_PROMOTION_ACTION 
			WHERE RULE_ID = #{ruleId}
	</select>
	<select id="findRuleActionById" resultType="RuleActionModelBean"> 
			SELECT ACTION_ID 
				,RULE_ID 
				,ACTION_TYPE 
				,ACTION_DETAIL
				,POINT_TYPE 
				,POINT_OPERATOR 
				,POINT_VALUE 
				,POINT_EXPIRE_UNIT 
				,POINT_EXPIRE_PERIOD 
				,UPD_OBJ 
				,UPD_ATTR 
				,UPD_OPERATOR 
				,WITH_OBJ 
				,WITH_ATTR 
				,WITH_OPRERATOR AS WITH_OPERATOR 
				,WITH_VALUE 
				,EXP
				,CREATED_DATE
				,CREATED_BY
				,UPDATED_DATE
				,UPDATED_BY
			FROM LOY_PROMOTION_ACTION 
			WHERE ACTION_ID = #{actionId}
	</select>
	<insert id="createRuleAction" keyColumn="ACTION_ID" keyProperty="actionId" useGeneratedKeys="true">
			 INSERT INTO LOY_PROMOTION_ACTION( 
				 RULE_ID
				,ACTION_TYPE
				,ACTION_DETAIL
				,POINT_TYPE
				,POINT_OPERATOR
				,POINT_VALUE
				,POINT_EXPIRE_UNIT
				,POINT_EXPIRE_PERIOD
				,UPD_OBJ
				,UPD_ATTR
				,UPD_OPERATOR
				,WITH_OBJ
				,WITH_ATTR
				,WITH_OPRERATOR
				,WITH_VALUE
				,CREATED_DATE
				,CREATED_BY
				,UPDATED_DATE
				,UPDATED_BY
				,USE_TXN_POINT_TYPE_FLAG
				,POINT_EXPIRE_DATE
			) VALUES (
				  #{ruleId}
				 ,#{actionType}
				 ,#{actionDetail}
				 ,#{pointType}
				 ,#{pointOperator}
				 ,#{pointValue}
				 ,#{pointExpireUnit}
				 ,#{pointExpirePeriod}
				 ,#{updObj}
				 ,#{updAttr}
				 ,#{updOperator}
				 ,#{withObj}
				 ,#{withAttr}
				 ,#{withOperator}
				 ,#{withValue}
				 ,NOW()
				 ,#{createdBy}
				 ,NOW()
				 ,#{createdBy}
				 ,#{useTxnPointTypeFlag} 
				 ,#{pointExpireDate}
			)
	</insert>
	<update id="updateRuleAction">
			UPDATE LOY_PROMOTION_ACTION 
			SET
				 RULE_ID = #{ruleId}
				,ACTION_TYPE = #{actionType}
				,ACTION_DETAIL = #{actionDetail}
				,POINT_TYPE = #{pointType}
				,POINT_OPERATOR = #{pointOperator}
				,POINT_VALUE = #{pointValue}
				,POINT_EXPIRE_UNIT = #{pointExpireUnit}
				,POINT_EXPIRE_PERIOD = #{pointExpirePeriod}
				,UPD_OBJ = #{updObj}
				,UPD_ATTR = #{updAttr}
				,UPD_OPERATOR = #{updOperator}
				,WITH_OBJ = #{withObj}
				,WITH_ATTR = #{withAttr}
				,WITH_OPRERATOR = #{withOperator}
				,WITH_VALUE = #{withValue}
				,UPDATED_DATE = NOW()
				,UPDATED_BY = #{updatedBy}
				,USE_TXN_POINT_TYPE_FLAG = #{useTxnPointTypeFlag}
				,POINT_EXPIRE_DATE = #{pointExpireDate}
			WHERE ACTION_ID = #{actionId}
	</update>
	<delete id="deleteRuleAction">
			DELETE FROM LOY_PROMOTION_ACTION 
			WHERE ACTION_ID = #{actionId}
	</delete>
	<select id="getRuleActionForActionQueryBuild" resultType="RuleActionModelBean"> 
			SELECT ACTION_ID 
				,RULE_ID 
				,ACTION_TYPE 
				,ACTION_DETAIL 
				,POINT_TYPE
				,POINT_OPERATOR 
				,POINT_VALUE 
				,POINT_EXPIRE_UNIT 
				,POINT_EXPIRE_PERIOD 
				,UPD_OBJ 
				,UPD_ATTR 
				,UPD_OPERATOR 
				,WITH_OBJ 
				,WITH_ATTR 
				,WITH_OPRERATOR AS WITH_OPERATOR 
				,WITH_VALUE 
				,EXP 
				, D.ATTR_GROUP_NAME AS UPD_GROUP
				, B.ATTR_NAME AS UPD_NAME
				, B.OBJECT_NAME AS UPD_OBJECT
				, B.FIELD_NAME AS UPD_FIELD
				, B.DATA_TYPE AS UPD_DATA_TYPE
				, E.ATTR_GROUP_NAME AS WITH_GROUP
				, C.ATTR_NAME AS WITH_NAME
				, C.OBJECT_NAME AS WITH_OBJECT
				, C.FIELD_NAME AS WITH_FIELD
				, C.DATA_TYPE AS WITH_DATA_TYPE
				, F.POINT_TYPE_NAME AS POINT_TYPE_NAME
			FROM LOY_PROMOTION_ACTION A 			
			LEFT JOIN LOY_ATTRIBUTE B ON A.UPD_ATTR = B.ATTR_ID AND A.UPD_OBJ = B.ATTR_GROUP_ID
			LEFT JOIN LOY_ATTRIBUTE C ON A.WITH_ATTR = C.ATTR_ID AND A.WITH_OBJ = C.ATTR_GROUP_ID
			LEFT JOIN LOY_ATTRIBUTE_GROUP D ON B.ATTR_GROUP_ID = D.ATTR_GROUP_ID 
			LEFT JOIN LOY_ATTRIBUTE_GROUP E ON C.ATTR_GROUP_ID = E.ATTR_GROUP_ID 
			LEFT JOIN LOY_PROGRAM_POINT_TYPE F ON A.POINT_TYPE = F.POINT_TYPE_ID
			WHERE A.ACTION_ID = #{actionId}	
	</select>
	<update id="updateRuleActionQuery">
			UPDATE LOY_PROMOTION_ACTION 
			SET
				 ACTION_QUERY = #{actionQuery}
				 , EXP = #{exp}
				 , UPDATED_DATE = NOW()
				 , UPDATED_BY = #{updatedBy}
			WHERE 
				ACTION_ID = #{actionId}
	</update>
	
	<!-- ############################# Product ############################# -->
	<select id="getProductList" resultType="PromotionProductModelBean"> 
			SELECT P.PROMOTION_PRODUCT_ID
				, P.PROMOTION_ID
				, P.PRODUCT_CODE
				, M.ITEM_NAME AS PRODUCT
                , C.CATEGORY_NAME AS PRODUCT_CATEGORY
                , CC.CATEGORY_NAME AS PRODUCT_PARENT_CATEGORY
				, P.CREATED_DATE
				, P.CREATED_BY
				, P.UPDATED_DATE
				, P.UPDATED_BY 
    		FROM LOY_PROMOTION_PRODUCT P
			INNER JOIN LOY_SALE_PRODUCT M ON P.PRODUCT_CODE = M.ITEM_CODE
            LEFT JOIN LOY_SALE_PRODUCT_CATEGORY C ON C.CATEGORY_CODE = M.CATEGORY_CODE
            LEFT JOIN LOY_SALE_PRODUCT_CATEGORY CC ON C.PARENT_CATEGORY_CODE = CC.CATEGORY_CODE
		<where>	
		  	<if test="promotionId != null">
		    	P.PROMOTION_ID = #{promotionId}
		  	</if>
	  	</where>		
	</select>
	
	<select id="getAllProductList" resultType="ProductModalModelBean"> 
		SELECT P.ITEM_CODE AS ITEM_ID
			, P.ITEM_NAME AS ITEM
			, P.CATEGORY_CODE AS CATEGORY_ID 
           	, C.CATEGORY_NAME AS CATEGORY
			, C.PARENT_CATEGORY_CODE AS PARENT_CATEGORY_ID
			, PC.CATEGORY_NAME AS PARENT_CATEGORY
			, P.CREATED_DATE
			, P.CREATED_BY
			, P.UPDATED_DATE
			, P.UPDATED_BY 
		FROM LOY_SALE_PRODUCT P
		LEFT JOIN LOY_SALE_PRODUCT_CATEGORY C ON P.CATEGORY_CODE = C.CATEGORY_CODE
        	LEFT JOIN LOY_SALE_PRODUCT_CATEGORY PC ON C.PARENT_CATEGORY_CODE = PC.CATEGORY_CODE
        	LEFT JOIN LOY_PROMOTION_PRODUCT PP ON PP.PRODUCT_CODE = P.ITEM_CODE AND PP.PROMOTION_ID = #{promotionId}
       	WHERE 
       		PP.PROMOTION_ID IS NULL
			AND P.ITEM_STATUS = '02'
			AND C.CATEGORY_STATUS = '01'
			AND PC.CATEGORY_STATUS = '01'
       	<if test="buId != null">
	    	AND P.BU_ID = #{buId}
	  	</if>
		<if test="item != null">
	    	<bind name="item" value="'%' + item + '%'" />
	    	AND P.ITEM_NAME like #{item}
	  	</if>
		<if test="parentCategoryId != null">
	    	AND C.PARENT_CATEGORY_CODE = #{parentCategoryId}
	  	</if>
	  	<if test="categoryId != null">
	    	AND C.CATEGORY_CODE = #{categoryId}
	  	</if>
		<choose>
			<when test="sortColumn != null">
		  		<if test="sortColumn == 'item'">
		  			ORDER BY P.ITEM_NAME ${sortDirection}	  	
		  		</if>
		  	</when>
		  	<otherwise>
		  		ORDER BY P.ITEM_NAME DESC  	
		  	</otherwise>
	  	</choose>
	</select>
	<!-- <select id="getAllProductList" resultType="PromotionProductModelBean"> 
			SELECT    ITEM_NAME AS ITEM
					, CATEGORY_CODE
    		FROM LOY_SALE_PRODUCT
	</select>-->
	
	<select id="getProductMasterList" resultType="ProductModalModelBean"> 
			SELECT    ITEM_CODE AS ITEM_ID
				    , ITEM_NAME AS ITEM
					, CATEGORY_CODE AS CATEGORY_ID
    		FROM LOY_SALE_PRODUCT
    	<where>	
		  	<if test="item != null">
		    	ITEM_NAME = #{item}
		  	</if>
	  	</where>	
	</select> 
	
	<!-- <insert id="createProduct" keyColumn="PROMOTION_PRODUCT_ID" keyProperty="promotionProductId" useGeneratedKeys="true">
			INSERT INTO LOY_PROMOTION_PRODUCT(
					  PROMOTION_ID
					, PRODUCT_CODE
					, CREATED_DATE
					, CREATED_BY
					, UPDATED_DATE
					, UPDATED_BY
			) VALUES (
				    #{promotionId}
				   ,#{productCode}
		           ,NOW()
		           ,#{createdBy}
		           ,NOW()
		           ,#{createdBy}
		    )
	</insert> -->
	<insert id="insertPromotionProduct" parameterType="map">
			INSERT INTO LOY_PROMOTION_PRODUCT(
					  PROMOTION_ID
					, PRODUCT_CODE
					, CREATED_DATE
					, CREATED_BY
					, UPDATED_DATE
					, UPDATED_BY
			) VALUES 
				<foreach item="productModalModelBean" index="index" collection="productModalList" open="" separator="," close="">
					(
						 #{productModalModelBean.promotionId}
					   , #{productModalModelBean.productCode}
			           , NOW()
			           , #{productModalModelBean.createdBy}
			           , NOW()
			           , #{productModalModelBean.updatedBy}
			        )
	        	</foreach>
	</insert>
	
	<delete id="deleteProduct">
			DELETE FROM LOY_PROMOTION_PRODUCT WHERE PROMOTION_PRODUCT_ID = #{promotionProductId}
	</delete> 
	
	<!-- ############################# Member ############################# -->
	<select id="getAllMemberList" resultType="PromotionMemberModelBean"> 
			SELECT C.TITLE		
				, C.FIRST_NAME
				, C.MIDDLE_NAME
				, C.LAST_NAME
			FROM TB_CUSTOMER C
			INNER JOIN LOY_MEMBER M ON M.ACCOUNT_NO = C.ACCOUNT_NO	
	</select>
	
	<select id="getMemberMasterList" resultType="MemberMasterData"> 
		SELECT 
		 	CASE M.MEMBER_TYPE
			WHEN true THEN CONCAT(M.FIRST_NAME,' ', M.LAST_NAME) 
			ELSE M.BUSINESS_NAME 
			END AS FULL_NAME,
			  M.FIRST_NAME
			  , M.LAST_NAME
			  , M.BUSINESS_NAME
			  , M.MEMBER_ID
			  , M.MEMBER_TYPE
			  , MC.MEMBER_CARD_NO
			  , T.TIER_NAME
		FROM LOY_MEMBER M 
		  	INNER JOIN LOY_MEMBER_CARD MC ON M.MEMBER_ID = MC.MEMBER_ID
			INNER JOIN LOY_TIER T ON M.MEMBER_TIER_ID = T.TIER_ID
    		LEFT JOIN LOY_PROMOTION_MEMBER MI ON MI.MEMBER_ID = M.MEMBER_ID AND MI.PROMOTION_ID = #{promotionId}
    		LEFT JOIN LOY_PROMOTION PR ON PR.PROMOTION_ID = #{promotionId}
    	WHERE
    		M.PROGRAM_ID = PR.PROGRAM_ID
    		AND MI.PROMOTION_ID IS NULL
    		AND MC.CARD_STATUS = '01'
	  	<if test="buId != null">
	    	AND M.BU_ID = #{buId}
	  	</if>
	  	<if test="firstName != null">
	  		<bind name="_firstName" value="'%' + firstName + '%'" />
	    	AND (M.FIRST_NAME like #{_firstName}
	    	OR M.BUSINESS_NAME like #{_firstName})
	  	</if>
	  	<if test="lastName != null">
	  		<bind name="_lastName" value="'%' + lastName + '%'" />
	    	AND M.LAST_NAME like #{_lastName}
	  	</if>
	  	<if test="memberCardNo != null">
	  		<bind name="_memberCardNo" value="'%' + memberCardNo + '%'" />
	    	AND MC.MEMBER_CARD_NO like #{_memberCardNo}
	  	</if>		
	</select>
	
	<select id="getMemberList" resultType="PromotionMemberModelBean"> 
			SELECT PM.PROMOTION_MEMBER_ID
				, PM.PROMOTION_ID
				, PM.MEMBER_ID
				, M.TITLE
				, M.FIRST_NAME
				, M.LAST_NAME
				, PM.CARD_NO
				, M.MEMBER_TIER_ID
				, T.TIER_NAME
				, PM.CREATED_DATE
				, PM.CREATED_BY
				, PM.UPDATED_DATE
				, PM.UPDATED_BY 
			FROM LOY_PROMOTION_MEMBER PM
			INNER JOIN LOY_MEMBER M ON PM.MEMBER_ID = M.MEMBER_ID
			INNER JOIN LOY_TIER T ON M.MEMBER_TIER_ID = T.TIER_ID
		<where>	
		  	<if test="promotionId != null">
		    	PM.PROMOTION_ID = #{promotionId} 
		  	</if>
	  	</where>		
	</select>
	
	<insert id="createMember" keyColumn="PROMOTION_MEMBER_ID" keyProperty="promotionMemberId" useGeneratedKeys="true">
			INSERT INTO LOY_PROMOTION_MEMBER(
					  PROMOTION_ID
					, MEMBER_ID
					, CARD_NO
					, CREATED_DATE
					, CREATED_BY
					, UPDATED_DATE
					, UPDATED_BY
			) VALUES(
				     #{promotionId}
				   , #{memberId}
				   , #{cardNo}
		           , NOW()
		           , #{createdBy}
		           , NOW()
		           , #{createdBy}
		    )
	</insert>
	
	<insert id="insertPromotionMember" parameterType="map">
			INSERT INTO LOY_PROMOTION_MEMBER(
					 PROMOTION_ID
					, MEMBER_ID
					, CARD_NO
					, CREATED_DATE
					, CREATED_BY
					, UPDATED_DATE
					, UPDATED_BY
				) VALUES		
				<foreach item="promotionMemberModelBean" index="index" collection="promotionMemberList" open="" separator="," close="">
					(
						#{promotionMemberModelBean.promotionId}
						, #{promotionMemberModelBean.memberId}
						, #{promotionMemberModelBean.cardNo}
			           	, NOW()
			           	, #{promotionMemberModelBean.createdBy}
			           	, NOW()
			           	, #{promotionMemberModelBean.updatedBy}
			        )
	        	</foreach>
	</insert>
	
	<delete id="deleteMember">
			DELETE FROM LOY_PROMOTION_MEMBER WHERE PROMOTION_MEMBER_ID = #{promotionMemberId}
	</delete> 	
	
	<!-- ############################# Program ############################# -->
	<select id="getShopList" resultType="PromotionShopModelBean"> 
			SELECT P.PROMOTION_SHOP_INCLUDED_ID
				, P.PROMOTION_ID
				, P.LOCATION AS LOCATION_ID
				, P.SHOP_ID
                , S.SHOP_NAME AS SHOP
				, P.SHOP_TYPE_ID
                , ST.SHOP_TYPE_NAME  AS SHOP_TYPE
				, CB1.CODE_NAME AS LOCATION
				, P.CREATED_DATE
				, P.CREATED_BY
				, P.UPDATED_DATE
				, P.UPDATED_BY 
			 FROM LOY_PROMOTION_SHOP_INCLUDED P
			 INNER JOIN LOY_SHOP S ON S.SHOP_ID = P.SHOP_ID
			 INNER JOIN LOY_SHOP_TYPE ST ON ST.SHOP_TYPE_ID = P.SHOP_TYPE_ID
			 LEFT JOIN TB_CODEBOOK CB1 ON CB1.CODE_ID = P.LOCATION  AND CB1.CODE_TYPE = 'LOCATION_CD'
    		
		<where>	
		  	<if test="promotionId != null">
		    	P.PROMOTION_ID = #{promotionId}
		  	</if>
		  	<if test="promotionShopIncludedId != null">
		    	AND P.PROMOTION_SHOP_INCLUDED_ID = #{promotionShopIncludedId}
		  	</if>
	  	</where>		
	</select>
	
	
	<select id="getShopMasterList" resultType="ShopModelBean"> 
       	SELECT S.SHOP_ID 
	      , S.SHOP_NAME
	      , S.SHOP_TYPE_ID 
		  , ST.SHOP_TYPE_NAME AS SHOP_TYPE 
	      , S.LOCATION AS LOCATION_ID 
             , CB1.CODE_NAME AS LOCATION_NAME
	      , S.SHOP_NO
	      , S.ACTIVE_FLAG 
	      , S.CREATED_DATE
		  , S.CREATED_BY
		  , S.UPDATED_DATE
		  , S.UPDATED_BY 
	  	FROM LOY_SHOP S
	  	LEFT JOIN LOY_SHOP_TYPE ST ON ST.SHOP_TYPE_ID = S.SHOP_TYPE_ID
		LEFT JOIN TB_CODEBOOK CB1 ON CB1.CODE_ID = S.LOCATION AND CB1.CODE_TYPE = 'LOCATION_CD'
		LEFT JOIN LOY_PROMOTION_SHOP_INCLUDED SI ON SI.SHOP_ID = S.SHOP_ID AND SI.PROMOTION_ID = #{promotionId}
		WHERE 
			SI.PROMOTION_ID IS NULL
		<if test="buId != null">
	    	AND S.BU_ID = #{buId}
	  	</if>
		<if test="locationId != null">
	    	AND S.LOCATION = #{locationId}
	  	</if>
		<if test="shopTypeId != null">
	    	AND S.SHOP_TYPE_ID = #{shopTypeId}
	  	</if>
	  	<if test="shopName != null">
			<bind name="shopName" value="'%'+shopName + '%'" />
	    	AND S.SHOP_NAME like #{shopName}
	  	</if>
		<choose>
			<when test="sortColumn != null">
		  		<if test="sortColumn == 'shopNo'">
		  			ORDER BY S.SHOP_NO ${sortDirection}	  	
		  		</if>
		  		<if test="sortColumn == 'shopName'">
		  			ORDER BY S.SHOP_NAME ${sortDirection}	  	
		  		</if>
		  	</when>
		  	<otherwise>
		  		ORDER BY S.SHOP_NAME DESC	  	
		  	</otherwise>
	  	</choose>
	</select>
	
	<insert id="createShop" keyColumn="PROMOTION_SHOP_ID" keyProperty="promotionShopId" useGeneratedKeys="true">
			INSERT INTO LOY_PROMOTION_SHOP_INCLUDED(
    			PROMOTION_ID
				, LOCATION
				, SHOP_ID
				, SHOP_TYPE_ID
				, CREATED_DATE
				, CREATED_BY
				, UPDATED_DATE
				, UPDATED_BY
			)VALUES(
				#{promotionId}
				, #{locationId}
				, #{shopId}
				, #{shopTypeId}
				, NOW()
				, #{createdBy}
				, NOW()
				, #{createdBy}
			)
	</insert>
	
	<insert id="insertPromotionShop" parameterType="map">
			INSERT INTO LOY_PROMOTION_SHOP_INCLUDED(
					PROMOTION_ID
					, LOCATION
					, SHOP_ID
					, SHOP_TYPE_ID
					, CREATED_DATE
					, CREATED_BY
					, UPDATED_DATE
					, UPDATED_BY
				) VALUES		
				<foreach item="promotionShopModelBean" index="index" collection="promotionShopList" open="" separator="," close="">
					(
						#{promotionShopModelBean.promotionId}
						, #{promotionShopModelBean.locationId}
						, #{promotionShopModelBean.shopId}
						, #{promotionShopModelBean.shopTypeId}
			           	, NOW()
			           	, #{promotionShopModelBean.createdBy}
			           	, NOW()
			           	, #{promotionShopModelBean.updatedBy}
			        )
	        	</foreach>
	</insert>
	
	<delete id="deleteShop">
			DELETE FROM LOY_PROMOTION_SHOP_INCLUDED WHERE PROMOTION_SHOP_INCLUDED_ID = #{promotionShopIncludedId}
	</delete> 	
	
	<!-- ############################# Attribute ############################# -->
	<select id="getPromotionAttributeList" resultType="PromotionAttributeModelBean"> 
			SELECT 
				   PROMOTION_ATTR_ID AS promotionAttrId
			 	 , PROGRAM_ID AS programId 
			 	 , PROMOTION_ID AS promotionId
				 , PROMOTION_ATTR_NAME AS promotionAttr
				 , PROMOTION_ATTR_TYPE AS promotionAttrDataTypeId
				 , PROMOTION_ATTR_INIT_VALUE AS promotionAttrInitValue
				 , ACTIVE_FLAG AS activeFlag
				 , REF_LOY_ATTR_ID AS refLoyAttrId
				 , CREATED_DATE 
				 , CREATED_BY
				 , UPDATED_DATE
				 , UPDATED_BY
			 FROM LOY_PROMOTION_ATTRIBUTE 
		<where>	
		  	<if test="programId != null">
		    	PROGRAM_ID = #{programId}
		  	</if>
		  	<if test="promotionId != null">
		    	AND PROMOTION_ID = #{promotionId}
		  	</if>
		  	<if test="promotionAttrId != null">
		    	AND PROMOTION_ATTR_ID = #{promotionAttrId}
		  	</if>
	  	</where>		
	</select>
	<select id="findPromotionAttributeById" resultType="PromotionAttributeModelBean"> 
			SELECT 
				   PROMOTION_ATTR_ID AS promotionAttrId
			 	 , PROGRAM_ID AS programId 
			 	 , PROMOTION_ID AS promotionId
				 , PROMOTION_ATTR_NAME AS promotionAttr
				 , PROMOTION_ATTR_TYPE AS promotionAttrDataTypeId
				 , PROMOTION_ATTR_INIT_VALUE AS promotionAttrInitValue
				 , ACTIVE_FLAG AS activeFlag
				 , REF_LOY_ATTR_ID AS refLoyAttrId
				 , CREATED_DATE 
				 , CREATED_BY
				 , UPDATED_DATE
				 , UPDATED_BY
			 FROM LOY_PROMOTION_ATTRIBUTE 
			 WHERE 	PROMOTION_ATTR_ID = #{promotionAttrId}
	</select>
	
	<insert id="createPromotionAttribute" keyColumn="PROMOTION_ATTR_ID" keyProperty="promotionAttrId" useGeneratedKeys="true">
			INSERT INTO LOY_PROMOTION_ATTRIBUTE ( 
				PROMOTION_ATTR_NAME, 
				PROMOTION_ATTR_TYPE,
				PROMOTION_ATTR_INIT_VALUE,
				PROMOTION_ID,
				PROGRAM_ID,
				ACTIVE_FLAG,
				REF_LOY_ATTR_ID,
				CREATED_DATE, 
				CREATED_BY,
				UPDATED_DATE,
				UPDATED_BY
			) VALUES (
			 	#{promotionAttr},
				#{promotionAttrDataTypeId},
				#{promotionAttrInitValue},
				#{promotionId},
				#{programId},
				#{activeFlag},
				#{refLoyAttrId},
				NOW(),
				#{createdBy},
				NOW(),
				#{updatedBy}  
			)
	</insert>
	
	<insert id="createLoyAttribute" keyColumn="ATTR_ID" keyProperty="attrId" useGeneratedKeys="true">
		INSERT INTO LOY_ATTRIBUTE 
		(
			ATTR_GROUP_ID
			, ATTR_NAME 
			, ATTR_ACTIVE_YN 
			, OBJECT_NAME
			, FIELD_NAME
			, DATA_TYPE
			, DEFAULT_VALUE
			, CREATED_DATE
			, CREATED_BY
			, BU_ID
		) 
		VALUES
		(
			0
			, #{attrName}
			, ATTR_ACTIVE_YN 
			, 'LOY_PROMOTION_ATTRIBUTE_VALUE'
			, #{attrName}
			, #{dataType}
			, #{defaultValue}
			, NOW()
			, #{createdBy}
			, #{buId}
		)
	</insert>
	
	<update id="updatePromotionAttribute">
			UPDATE 
				LOY_PROMOTION_ATTRIBUTE 
			SET
				PROMOTION_ATTR_NAME = #{promotionAttr},
				PROMOTION_ATTR_TYPE = #{promotionAttrDataTypeId},
				PROMOTION_ATTR_INIT_VALUE = #{promotionAttrInitValue},
				ACTIVE_FLAG = #{activeFlag},
				UPDATED_BY = #{updatedBy},
				UPDATED_DATE = NOW()
			WHERE 
				PROMOTION_ATTR_ID = #{promotionAttrId} ;
				
	</update>
	
	<delete id="deletePromotionAttribute">
			DELETE FROM LOY_PROMOTION_ATTRIBUTE 
			WHERE PROMOTION_ATTR_ID = #{promotionAttrId}
	</delete> 	
	 
</mapper>