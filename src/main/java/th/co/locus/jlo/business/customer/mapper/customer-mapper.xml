<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="customer">
	<select id="getCustomerList" resultType="customerData"> 
       	select
		 t.`CUSTOMER_ID`, t.`CUSTOMER_TYPE`, t.`MEMBER_CARD_NO`,
		 CASE t.`CUSTOMER_TYPE` WHEN true THEN CONCAT(t.`FIRST_NAME`,' ', t.`LAST_NAME`) ELSE t.`BUSINESS_NAME` END AS FULL_NAME,
		 t.`TITLE`, t.`FIRST_NAME`, t.`LAST_NAME`, t.`CITIZEN_ID`, t.PASSPORT_NO,
		 t.`NATIONALITY`,
		 t.`BUSINESS_NAME`, t.`TAX_ID`, t.`CUSTOMER_STATUS`,
		 t.`APPROVED_BY`, t.`APPROVED_DATE`, t.`MEMBER_ID`
		from vw_customer_search t
		<where>	
			<if test="passportNo != null and passportNo != ''">
				<bind name="passportNo" value="'%' + passportNo + '%'" />
		    		AND t.PASSPORT_NO like #{passportNo}
		  	</if>
		  	<if test="citizenId != null and citizenId != ''">
				<bind name="citizenId" value="'%' + citizenId + '%'" />
		    		AND t.CITIZEN_ID like #{citizenId}
		  	</if>
			<if test="firstName != null and firstName != ''">
				<bind name="firstName" value="'%' + firstName + '%'" />
		    		AND (t.FIRST_NAME like #{firstName} or t.BUSINESS_NAME like #{firstName})
		  	</if>
			<if test="lastName != null and lastName != ''">
				<bind name="lastName" value="'%' + lastName + '%'" />
		    		AND t.LAST_NAME like #{lastName}
		  	</if>
		  	<if test="buId != null and buId != ''">
				<bind name="buId" value="buId" />
		  			AND t.`BU_ID` = #{buId}
		  	</if>
		  	<if test="memberCardNo != null and memberCardNo != ''">
				<bind name="memberCardNo" value="memberCardNo" />
		    		AND t.MEMBER_CARD_NO = #{memberCardNo}
		    		AND t.CARD_STATUS = '01'
		  	</if>
		</where>
	  	<choose>
		  	<when test="sortColumn != null and sortColumn != ''">
		  		<if test="sortColumn == 'lastName'">
		  			order by t.LAST_NAME ${sortDirection}
		  		</if>
		  		<if test="sortColumn == 'firstName'">
		  			order by t.FIRST_NAME ${sortDirection}
		  		</if>
		  		<if test="sortColumn == 'fullName'">
		  			order by FULL_NAME ${sortDirection}
		  		</if>
		  		<if test="sortColumn == 'customerStatus'">
		  			order by t.`CUSTOMER_STATUS` ${sortDirection}
		  		</if>
		  	</when>
		  	<otherwise>
		  		ORDER BY 3 ASC
		  	</otherwise>
	  	</choose>
	</select>
	
	<select id="findCustomerById" resultType="CustomerData">
		select * from TB_customer where customer_id = #{customerId}
	</select>
	
	<select id="findCustomerByCitizenIdOrPassportNo" resultType="customerData"> 
       	select
		 t.CUSTOMER_ID,
		 CASE t.CUSTOMER_TYPE
		 	WHEN true THEN CONCAT(t.FIRST_NAME,' ', t.LAST_NAME)
		 	ELSE t.BUSINESS_NAME
		 	END AS FULL_NAME,
		 	t.MEMBER_ID
		from vw_customer_search t
		<where>
			<if test="passportNo != null and passportNo != ''">
		    	AND t.PASSPORT_NO = #{passportNo}
		  	</if>
		  	<if test="citizenId != null and citizenId != ''">
		    	AND t.CITIZEN_ID like #{citizenId}
		  	</if>
		  	<if test="buId != null and buId != ''">
		  		AND t.BU_ID = #{buId}
		  	</if>
		</where>
	</select>
	
	<update id="updateCustomer">
		UPDATE tb_customer SET 
			`UPDATED_BY`=#{updatedBy}, `UPDATED_DATE`=NOW(), 
			`TITLE`=#{title}, `FIRST_NAME`=#{firstName}, `LAST_NAME`=#{lastName}, 
			`NATIONALITY`=#{nationality}, `CITIZEN_ID`=#{citizenId}, `PASSPORT_NO`=#{passportNo}, `TAX_ID`=#{taxId}, 
			`BIRTHDATE`=#{birthDate}, `GENDER`=#{gender}, `MARITAL_STATUS`=#{maritalStatus}, 
			`PHONE_AREA`=#{phoneArea},`PHONE_NO`=#{phoneNo},`EMAIL`=#{email},
			`OCCUPATION`=#{occupation}, `PROGRAM_ID`=#{programId},
			`BUSINESS_NAME`=#{businessName}, `BUSINESS_TYPE`=#{businessType},
			`REGISTRATION_CHANNEL`=#{registrationChannel},`REGISTRATION_STORE`=#{registrationStore},	
			`CUSTOMER_STATUS`=#{customerStatus},`REMARK`=#{remark}			
		WHERE `CUSTOMER_ID`=  #{customerId}
	</update>
	<update id="updateCustomerStatus">
		UPDATE tb_customer			
		<set>
			`UPDATED_BY`=#{updatedBy}, `UPDATED_DATE`=NOW(), 
			`CUSTOMER_STATUS`=#{customerStatus},
			<if test="approvedBy !=null and approvedBy!=''">
				APPROVED_BY = #{approvedBy}, 
				APPROVED_DATE = NOW(),
			</if>
		</set>	
		WHERE `CUSTOMER_ID`=  #{customerId}
	</update>
	<insert id="createCustomer" keyColumn="CUSTOMER_ID" keyProperty="customerId" useGeneratedKeys="true">
		INSERT INTO tb_customer (
			`PROGRAM_ID`,
			`CUSTOMER_TYPE`,
			`TITLE`,
			`FIRST_NAME`,
			`LAST_NAME`,
			`NATIONALITY`,
			`CITIZEN_ID`,
			`PASSPORT_NO`,
			`TAX_ID`, 
			`BIRTHDATE`,
			`GENDER`, 
			`MARITAL_STATUS`, 
			`OCCUPATION`, 
			`BUSINESS_NAME`, 
			`BUSINESS_TYPE`, 
			`PHONE_AREA`,
			`PHONE_NO`,
			`EMAIL`,
			`REGISTRATION_CHANNEL`,
			`REMARK`,
			`REGISTRATION_STORE`,			
			`CUSTOMER_STATUS`,
			`BU_ID`,
			`CREATED_BY`, 
			`CREATED_DATE`, 
			`UPDATED_BY`, 
			`UPDATED_DATE`
		) VALUES(
			#{programId},
			#{customerType}, 
			#{title}, 
			#{firstName}, 
			#{lastName}, 
			#{nationality}, 
			#{citizenId}, 
			#{passportNo}, 
			#{taxId}, 
			#{birthDate}, 
			#{gender}, 
			#{maritalStatus}, 
			#{occupation}, 
			#{businessName}, 
			#{businessType},
			#{phoneArea},
			#{phoneNo},
			#{email},
			#{registrationChannel},
			#{remark},
			#{registrationStore},
			#{customerStatus},
			#{buId},
			#{createdBy}, 
			NOW(), 
			#{updatedBy}, 
			NOW()
		)
	</insert>
	
	<select id="getCustomerAddressList" resultType="AddressData">
		select a.*,
			concat( a.ADDRESS,' ',ifnull(t.SUB_DISTRICT,''),' ',ifnull(t.DISTRICT,''),' ',ifnull(t.PROVINCE,'')) as fullAddress
		from tb_customer_address a
		left join tb_province t on a.SUB_DISTRICT=t.LOCATION_CODE and a.POSTCODE = t.POSTAL_CODE
		<where>
			<if test="customerId != null">
				AND a.CUSTOMER_ID = #{customerId}
			</if>
			<if test="buId != null">
				AND a.BU_ID = #{buId}
			</if>
		</where>
	</select>
	
	<select id="findCustomerAddressById" resultType="AddressData">
		select a.*, concat( a.`ADDRESS`,' ',ifnull(t.`SUB_DISTRICT`,''),' ',ifnull(t.`DISTRICT`,''),' ',ifnull(t.`PROVINCE`,'')) as fullAddress
		from tb_customer_address a
		left join tb_province t on a.`SUB_DISTRICT`=t.`LOCATION_CODE`and a.`POSTCODE` = t.`POSTAL_CODE`
		<where>	
			<if test="addressId != null and addressId != ''">
				<bind name="addressId" value="addressId" />
		    		AND a.ADDRESS_ID =  #{addressId}
		  	</if>
		  	<if test="primaryYn != null and primaryYn != ''">
				<bind name="primaryYn" value="primaryYn" />
		    		AND a.PRIMARY_YN = #{primaryYn}
		  	</if>
		  	<if test="customerId != null and customerId != ''">
				<bind name="customerId" value="customerId" />
		    		AND a.CUSTOMER_ID = #{customerId}
		  	</if>
			<if test="buId != null">
				AND a.BU_ID = #{buId}
			</if>
		</where>
	</select>
	<update id="updateCustomerAddress">
		UPDATE tb_customer_address SET
			`ADDRESS_TYPE`=#{addressType}, 
			`PRIMARY_YN`=#{primaryYn}, 
			`ADDRESS`=#{address}, 
			`SUB_DISTRICT`=#{subDistrict}, 
			`DISTRICT`=#{district},
			`PROVINCE`=#{province},
			`COUNTRY`=#{country}, 
			`POSTCODE`=#{postCode}, 
			`UPDATED_BY`=#{updatedBy}, 
			`UPDATED_DATE`=NOW() 
		WHERE `ADDRESS_ID` = #{addressId}
	</update>
	<insert id="createCustomerAddress" keyColumn="ADDRESS_ID" keyProperty="addressId" useGeneratedKeys="true">
		INSERT INTO tb_customer_address (
			`CUSTOMER_ID`,
			`ADDRESS_TYPE`,
			`PRIMARY_YN`,
			`ADDRESS`,
			`SUB_DISTRICT`,
			`DISTRICT`,
			`PROVINCE`,
			`COUNTRY`,
			`POSTCODE`,
			`BU_ID`,
			`CREATED_BY`,
			`CREATED_DATE`,
			`UPDATED_BY`,
			`UPDATED_DATE`
		) VALUES (
			#{customerId},
			#{addressType}, 
			#{primaryYn},
			#{address},
			#{subDistrict},
			#{district},
			#{province},
			#{country},
			#{postCode},
			#{buId},
			#{createdBy},
			NOW(),
			#{updatedBy},
			NOW()
		);
			
	</insert>
	<update id="clearCustomerAddressPrimary">
		UPDATE tb_customer_address SET 
			`PRIMARY_YN`='N',
			`UPDATED_BY`=#{updatedBy}, 
			`UPDATED_DATE`=NOW() 
		WHERE `CUSTOMER_ID` = #{customerId}  AND `PRIMARY_YN` = 'Y'
	</update>
	
	<delete id="deleteCustomerAddress">
			DELETE FROM tb_customer_address WHERE `ADDRESS_ID` = #{addressId}
	</delete>
</mapper>