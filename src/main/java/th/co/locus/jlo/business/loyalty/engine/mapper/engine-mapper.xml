<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="engine">
 	
 	<insert id="insertCancelTxn" keyColumn="TXN_ID" keyProperty="txnId" useGeneratedKeys="true">
 	
 		INSERT INTO loy_txn ( PROGRAM_ID , MEMBER_ID , MEMBER_TIER_ID , CARD_NUMBER , CARD_TIER , CANCELLED_TXN_ID,
 			PRODUCT_ID , PRODUCT_TYPE , PRODUCT_NAME , LOY_PRODUCT_TYPE , REWARD_TYPE , CHANNEL , RECEIPT_ID , RECEIPT_DATE , 
			AMOUNT , SPENDING , STORE_SHOP_ID , STORE_SHOP_TYPE , TXN_TYPE , TXN_SUB_TYPE , STATUS , SUB_STATUS , QUANTITY , 
			REDEEM_METHOD , REFERED_CARD_NO , POS_TRANS_ID, POS_TRANS_DATE, POS_CANCEL_TRANS_ID , 
			CREATED_DATE , UPDATED_DATE , CREATED_BY , UPDATED_BY , BU_ID )
		
		SELECT PROGRAM_ID , MEMBER_ID , MEMBER_TIER_ID , CARD_NUMBER , CARD_TIER , #{txnId},
			PRODUCT_ID , PRODUCT_TYPE , PRODUCT_NAME , LOY_PRODUCT_TYPE , REWARD_TYPE , CHANNEL , RECEIPT_ID , RECEIPT_DATE , 
			AMOUNT , SPENDING , STORE_SHOP_ID , STORE_SHOP_TYPE ,
			CASE 
			 WHEN TXN_TYPE = 'EARN' THEN 'BURN' 
			 WHEN TXN_TYPE = 'BURN' THEN 'EARN'
			END AS TXN_TYPE , 'CANCELLATION' , 'QUEUED' , NULL , QUANTITY , REDEEM_METHOD ,
			 REFERED_CARD_NO , POS_TRANS_ID, POS_TRANS_DATE, POS_CANCEL_TRANS_ID ,
			NOW(), NOW() , #{createdBy}  , #{createdBy} , BU_ID
		FROM loy_txn
		
		WHERE TXN_ID = #{txnId}
 	</insert>
 	
 	<select id="findProductByProductCode" resultType="loyaltyProductModelBean">
	 		SELECT p.PRODUCT_ID , p.PRODUCT_CODE , p.PRODUCT_NAME as product , p.PRODUCT_TYPE , p.LOY_PRODUCT_TYPE , p.REWARD_TYPE 
			FROM LOY_PRODUCT p 
			INNER JOIN LOY_MEMBER m ON m.PROGRAM_ID = p.PROGRAM_ID 
 		<where>
			p.PRODUCT_TYPE = #{loyProductType} 
 			<if test="memberId != null and memberId != ''">
 				AND m.MEMBER_ID = #{memberId}
 			</if> 
 			<if test="productCode != null and productCode != ''">
				AND p.PRODUCT_CODE = #{productCode}
			</if> 	
 		</where>
 	</select> 
 	
 	<insert id="insertEnrollTransaction"  keyColumn="TXN_ID" keyProperty="txnId" useGeneratedKeys="true">
 	
		INSERT INTO LOY_TXN ( 
			PROGRAM_ID , MEMBER_ID , MEMBER_TIER_ID , CARD_NUMBER , CARD_TIER , BU_ID ,
			PRODUCT_ID , PRODUCT_TYPE , PRODUCT_NAME , LOY_PRODUCT_TYPE ,  CHANNEL , RECEIPT_ID , RECEIPT_DATE , AMOUNT , SPENDING , 
			STORE_SHOP_ID , STORE_SHOP_NAME , STORE_SHOP_TYPE , TXN_TYPE , TXN_SUB_TYPE , STATUS , 
			CREATED_DATE , UPDATED_DATE , CREATED_BY , UPDATED_BY ) 	
		SELECT 
			m.PROGRAM_ID , m.MEMBER_ID , m.MEMBER_TIER_ID , c.MEMBER_CARD_NO , c.CARD_TIER_ID , m.BU_ID ,
			#{productId} , #{productType} , #{productName} , #{loyProductTypeId} , #{channel}, null, null, null, null,
			null , null, null,   #{txnType} ,  #{txnSubType} , #{txnStatus},
			NOW() , NOW() , #{createdBy} , #{updatedBy}
		FROM LOY_MEMBER m INNER JOIN LOY_MEMBER_CARD c ON m.member_id = c.member_id AND c.PRIMARY_YN = 'Y'
		WHERE m.MEMBER_ID = #{memberId}
		
 	</insert>

 	<select id="getTransactionById" resultType="transactionModelBean"> 
       		SELECT  
				T.TXN_ID
				,T.PROGRAM_ID
				,T.MEMBER_ID
				,T.MEMBER_TIER_ID
				,T.CARD_NUMBER
				,T.CARD_TIER AS CARD_TIER_ID
				,T.PRODUCT_ID
				,T.PRODUCT_CODE
				,T.PRODUCT_TYPE
				,T.PRODUCT_NAME AS PRODUCT
				,T.LOY_PRODUCT_TYPE
				,T.CHANNEL
				,T.RECEIPT_ID
				,T.RECEIPT_DATE 
				,T.AMOUNT
				,T.TXN_TYPE AS TXN_TYPE_ID
                ,C5.CODE_NAME AS TXN_TYPE
				,T.TXN_SUB_TYPE AS TXN_SUB_TYPE_ID 
                ,C6.CODE_NAME AS TXN_SUB_TYPE
				,T.STATUS AS TXN_STATUS_ID
                ,C4.CODE_NAME AS TXN_STATUS
				,T.SUB_STATUS
				,T.QUANTITY
				,T.REDEEM_METHOD
				,T.POINT_BEFORE
				,T.EARN_POINT
				,T.BURN_POINT
				,T.BALANCE_POINT
				,T.REQUEST_POINT
				,T.PROCESSED_DATE
				,T.REFERED_CARD_NO
				,T.CANCELLED_TXN_ID
				,T.STORE_SHOP_ID
				,T.STORE_SHOP_TYPE
				,T.CREATED_DATE
				,T.UPDATED_DATE
				,T.CREATED_BY
				,T.UPDATED_BY 
				,P.PROGRAM_NAME AS PROGRAM
				,CONCAT(CUS.FIRST_NAME,'', ' ' , CUS.LAST_NAME,'') AS MEMBER_NAME
			FROM LOY_TXN T
			INNER JOIN LOY_PROGRAM P on T.PROGRAM_ID = P.PROGRAM_ID
			INNER JOIN LOY_MEMBER M ON T.MEMBER_ID = M.MEMBER_ID
			INNER JOIN TB_CUSTOMER CUS ON CUS.CUSTOMER_ID = M.CUSTOMER_ID 
			INNER JOIN TB_CODEBOOK C4  ON T.STATUS = C4.CODE_ID AND C4.CODE_TYPE = 'TXN_STATUS'
            INNER JOIN TB_CODEBOOK C5  ON T.TXN_TYPE = C5.CODE_ID AND C5.CODE_TYPE = 'TXN_TYPE'
            INNER JOIN TB_CODEBOOK C6  ON T.TXN_SUB_TYPE = C6.CODE_ID AND C6.CODE_TYPE = 'TXN_SUB_TYPE'
		WHERE
			T.TXN_ID = #{txnId}
	</select>


	<select id="checkExistingTXNReceipt" resultType="transactionModelBean">

	 		SELECT x.TXN_ID
			FROM LOY_TXN x
			<where>
				<if test="receiptId != null">
			    	AND x.RECEIPT_ID = #{receiptId}
			  	</if>
			  	<if test="receiptDate != null">
					<![CDATA[ AND DATE(x.RECEIPT_DATE) = #{receiptDate, jdbcType=DATE} ]]>
				</if>
				<if test="shopId != null">
			    	AND x.STORE_SHOP_ID = #{shopId}
			  	</if>
				<if test="spending != null">
			    	AND x.SPENDING = #{spending}
			  	</if>
			</where>
 	</select> 
 	
 	
 	<insert id="insertReceiptTXN" keyColumn="TXN_ID" keyProperty="txnId" useGeneratedKeys="true">
 	
 		INSERT INTO LOY_TXN ( PROGRAM_ID , MEMBER_ID , MEMBER_TIER_ID , CARD_NUMBER , CARD_TIER , 
			PRODUCT_ID , PRODUCT_TYPE , PRODUCT_NAME , LOY_PRODUCT_TYPE , CHANNEL , RECEIPT_ID , RECEIPT_NO , RECEIPT_DATE , AMOUNT , SPENDING , 
			STORE_SHOP_ID , STORE_SHOP_NAME , STORE_SHOP_TYPE , STORE_SHOP_TYPE_NAME ,
			TXN_TYPE , TXN_SUB_TYPE , STATUS , 
			CREATED_DATE , UPDATED_DATE , CREATED_BY , UPDATED_BY , BU_ID) 
	
		SELECT m.PROGRAM_ID , m.MEMBER_ID , m.MEMBER_TIER_ID , c.MEMBER_CARD_NO , c.CARD_TIER_ID , 
			#{productId} , #{productType} , #{productName} , #{loyProductType} , #{channel} , #{receiptId} , #{receiptNo} , #{receiptDate} , #{amount} , #{spending},
			#{storeShopId} , #{storeShopName} , #{storeShopTypeId}, #{storeShopType} ,
			#{txnType} , #{txnSubType} , #{txnStatus},
			NOW() , NOW() , #{createdBy} , #{updatedBy} , m.BU_ID
		
		FROM LOY_MEMBER m INNER JOIN LOY_MEMBER_CARD c ON m.member_id = c.member_id  AND c.PRIMARY_YN = 'Y'
		WHERE m.MEMBER_ID = #{memberId}
 	   
 	   
 	</insert>
 	
 	
 	<insert id="insertRedeemTxn" keyColumn="TXN_ID" keyProperty="txnId" useGeneratedKeys="true">
		INSERT INTO LOY_TXN  (
			PROGRAM_ID
			, MEMBER_ID
			, MEMBER_TIER_ID
			, CARD_NUMBER
			, CARD_TIER
			, CARD_TYPE_ID
			, PRODUCT_ID
			, PRODUCT_CODE
			, PRODUCT_TYPE
			, PRODUCT_NAME
			, LOY_PRODUCT_TYPE
			, REWARD_TYPE
			, CHANNEL
			, REQUEST_POINT
			, REQUEST_CASH
			, QUANTITY
			, REDEEM_METHOD
			, RECEIPT_ID
			, RECEIPT_NO
			, RECEIPT_DATE
			, AMOUNT
			, SPENDING
			, STORE_SHOP_ID
			, STORE_SHOP_NAME
			, STORE_SHOP_TYPE
			, STORE_SHOP_TYPE_NAME
			, TXN_TYPE
			, TXN_SUB_TYPE
			, STATUS
			, CREATED_DATE
			, UPDATED_DATE
			, CREATED_BY
			, UPDATED_BY
			, BU_ID
		)
		SELECT m.PROGRAM_ID
			, m.MEMBER_ID
			, m.MEMBER_TIER_ID
			, c.MEMBER_CARD_NO
			, c.CARD_TIER_ID
			, c.CARD_TYPE
			, #{productId}
			, #{productCode}
			, #{productType}
			, #{productName}
			, #{loyProductType}
			, #{rewardTypeId}
			, #{channel}
			, #{requestPoint}
			, #{requestCash}
			, #{quantity}
			, #{redeemMethod}
			, #{receiptId}
			, #{receiptNo}
			, #{receiptDate}
			, #{amount}
			, #{spending}
			, #{storeShopId}
			, #{storeShopName}
			, #{storeShopTypeId}
			, #{storeShopType}
			, #{txnType}
			, #{txnSubType}
			, #{txnStatus}
			, NOW()
			, NOW()
			, #{createdBy}
			, #{updatedBy}
			, m.BU_ID
		FROM LOY_MEMBER m
		INNER JOIN LOY_MEMBER_CARD c ON m.member_id = c.member_id AND c.PRIMARY_YN = 'Y'
		WHERE m.MEMBER_ID = #{memberId}
 	</insert>
</mapper>