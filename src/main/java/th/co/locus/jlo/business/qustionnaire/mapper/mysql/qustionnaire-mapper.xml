<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="questionnaire">
	
	<select id="getHeaderQuestionaireList" resultType="QuestionnaireHeaderModelBean">
		SELECT 
		hd.ID
		, hd.QUESTIONNAIRE_TYPE
		, hd.FORM_NAME
		, hd.SECTION_HEADER_TEXT
		, hd.STATUS_CD
		, hd.BU_ID
		, hd.CREATED_DATE
		, hd.CREATED_BY
		, hd.UPDATED_DATE
		, hd.UPDATED_BY
		, concat(cr.FIRST_NAME,' ',cr.LAST_NAME) AS createdByName
		, concat(upd.FIRST_NAME,' ',upd.LAST_NAME) AS updatedByName
		, smllink2.URL_LINK
		, smllink2.HASH_KEY
		FROM tb_questionnaire_header_master hd
		LEFT JOIN tb_user cr  on hd.CREATED_BY =cr.ID 
		LEFT JOIN tb_user upd on hd.UPDATED_BY = upd.ID 
		left join 
		(
			select 
			subsml.HEADER_ID
			,max(subsml.ID)  as ID
			from tb_questionnaire_smartlink subsml
			where subsml.HEADER_ID is not null
			group by subsml.HEADER_ID
		) smlLink on hd.ID = smlLink.HEADER_ID
		left join tb_questionnaire_smartlink smlLink2 on smlLink.ID=smlLink2.ID
		WHERE hd.STATUS_CD=#{statusCd}
		<if test="formName!=null and formName!=''">
			<bind name="bformName" value="'%' + formName + '%'" />
			AND hd.FORM_NAME like #{bformName}
		</if>
		<if test="questionnaireType!=null and questionnaireType!=''">
			AND hd.QUESTIONNAIRE_TYPE=#{questionnaireType}
		</if>
		ORDER BY hd.CREATED_DATE DESC
	</select>

	<select id="findQuestionnaireById" resultType="QuestionnaireHeaderModelBean">
		SELECT 
		hd.ID
		, hd.QUESTIONNAIRE_TYPE
		, hd.FORM_NAME
		, hd.SECTION_HEADER_TEXT
		, hd.STATUS_CD
		, hd.BU_ID
		, hd.CREATED_DATE
		, hd.CREATED_BY
		, hd.UPDATED_DATE
		, hd.UPDATED_BY
		, concat(cr.FIRST_NAME,' ',cr.LAST_NAME) AS createdByName
		, concat(upd.FIRST_NAME,' ',upd.LAST_NAME) AS updatedByName
		, smllink2.URL_LINK
		, smllink2.HASH_KEY
		FROM tb_questionnaire_header_master hd
		LEFT JOIN tb_user cr  on hd.CREATED_BY =cr.ID 
		LEFT JOIN tb_user upd on hd.UPDATED_BY = upd.ID 
		left join 
		(
			select 
			subsml.HEADER_ID
			,max(subsml.ID)  as ID
			from tb_questionnaire_smartlink subsml
			where subsml.HEADER_ID is not null
			group by subsml.HEADER_ID
		) smlLink on hd.ID = smlLink.HEADER_ID
		left join tb_questionnaire_smartlink smlLink2 on smlLink.ID=smlLink2.ID
		WHERE hd.ID=#{id}
	</select>
	
	<insert id="createHeaderQuestionnaire" keyColumn="ID" keyProperty="id" useGeneratedKeys="true">
	    INSERT INTO `tb_questionnaire_header_master`
	    (
	        `QUESTIONNAIRE_TYPE`,
	        `FORM_NAME`,
	        `SECTION_HEADER_TEXT`,
	        `STATUS_CD`,
	        `BU_ID`,
	        `CREATED_DATE`,
	        `CREATED_BY`,
	        `UPDATED_DATE`,
	        `UPDATED_BY`
	    )
	    VALUES
	    (
	        #{questionnaireType},
	        #{formName},
	        #{sectionHeaderText},
	        #{statusCd},
	        #{buId},
	        NOW(),
	        #{createdBy},
	        NOW(),
	        #{updatedBy}
	    )
	</insert>

	
	<update id="updateHeaderQuestionnaire">
		UPDATE  `tb_questionnaire_header_master`
			SET
			`QUESTIONNAIRE_TYPE` = #{questionnaireType},
			`FORM_NAME` =#{formName},
			`SECTION_HEADER_TEXT` = #{sectionHeaderText},
			`STATUS_CD` = #{statusCd},
			`UPDATED_DATE` = NOW(),
			`UPDATED_BY` = #{updatedBy}
			WHERE `ID` = #{id};
	</update>
	
	<select id="getQuestionnaireQuestionList" resultType="QuestionnaireQuestionModelBean">
		SELECT 
		q.ID
		, q.HEADER_ID
		, q.QUESTION
		, q.ANSWER_TYPE
		, anstype.CODE_NAME  as answerTypename
		, IFNULL(options.optionsStr,'') as OPTIONS
		, q.DESCRIPTION
		, q.IMAGE_URL
		, q.STATUS_CD
		, q.REQUIRED_FLG
		, q.SEQ_NO
		, q.BU_ID
		, q.CREATED_DATE
		, q.CREATED_BY
		, concat(cr.FIRST_NAME,' ',cr.LAST_NAME) as createdByName 
		, q.UPDATED_DATE
		, q.UPDATED_BY
		, concat(upd.FIRST_NAME,' ',upd.LAST_NAME) as updatedByName
		, anstype.ETC1  as componentType
		FROM tb_questionnaire_q_master q
		left join tb_codebook anstype on q.ANSWER_TYPE = anstype.CODE_ID and anstype.CODE_TYPE ='ANSWER_TYPE'
		left join tb_user cr on q.CREATED_BY = cr.USER_ID 
		left join tb_user upd on q.UPDATED_BY =upd.USER_ID 
		left join(
			select 
			hd.ID as headerId
			,ans.QUESTION_ID as questionId
			, TRIM(GROUP_CONCAT(ans.ANSWER ORDER BY ans.ID ASC SEPARATOR ' , ')) as optionsStr
			from tb_questionnaire_ans_master ans
			join tb_questionnaire_q_master q on q.ID = ans.QUESTION_ID 
			join tb_questionnaire_header_master hd on q.HEADER_ID =hd.id
			group by q.ID,ans.QUESTION_ID
		) options on q.ID = options.questionId and q.HEADER_ID =options.headerId
		where q.HEADER_ID=#{headerId}
		and q.STATUS_CD='Y'
		ORDER BY q.SEQ_NO
	</select>
	<select id="getQuestionnairequestionDetail" resultType="QuestionnaireQuestionModelBean">
		SELECT 
		q.ID
		, q.HEADER_ID
		, q.QUESTION
		, q.ANSWER_TYPE
		, IFNULL(options.optionsStr,'') as OPTIONS
		, q.DESCRIPTION
		, q.IMAGE_URL
		, q.STATUS_CD
		, q.REQUIRED_FLG
		, q.SEQ_NO
		, q.BU_ID
		, q.CREATED_DATE
		, q.CREATED_BY
		, concat(cr.FIRST_NAME,' ',cr.LAST_NAME) as createdByName 
		, q.UPDATED_DATE
		, q.UPDATED_BY
		,concat(upd.FIRST_NAME,' ',upd.LAST_NAME) as updatedByName
		FROM tb_questionnaire_q_master q
		left join tb_user cr on q.CREATED_BY = cr.USER_ID 
		left join tb_user upd on q.UPDATED_BY =upd.USER_ID 
		left join(
			select 
			hd.ID as headerId
			,ans.QUESTION_ID as questionId
			, TRIM(GROUP_CONCAT(ans.ANSWER ORDER BY ans.ID ASC SEPARATOR ' , ')) as optionsStr
			from tb_questionnaire_ans_master ans
			join tb_questionnaire_q_master q on q.ID = ans.QUESTION_ID 
			join tb_questionnaire_header_master hd on q.HEADER_ID =hd.id
			group by q.ID,ans.QUESTION_ID
		) options on q.ID = options.questionId and q.HEADER_ID =options.headerId
		where q.ID=#{id}
	</select>
	
	<insert id="createQuestionnaireQuestion" keyColumn="ID" keyProperty="id" useGeneratedKeys="true">
	    INSERT INTO tb_questionnaire_q_master
		( HEADER_ID
		, QUESTION
		, ANSWER_TYPE
		, DESCRIPTION
		, IMAGE_URL
		, STATUS_CD
		, REQUIRED_FLG
		, SEQ_NO
		, BU_ID
		, CREATED_DATE
		, CREATED_BY
		, UPDATED_DATE
		, UPDATED_BY
		)
		VALUES(
		#{headerId}
		, #{question}
		, #{answerType}
		, #{description}
		, #{imageUrl}
		, #{statusCd}
		, #{requiredFlg}
		, #{seqNo}
		, #{buId}
		, NOW()
		, #{createdBy}
		, NOW()
		, #{updatedBy}
		)
	</insert>
	
	<update id="updateQuestionnaireQuestion">
		UPDATE tb_questionnaire_q_master
		SET 
		  QUESTION=#{question}
		, ANSWER_TYPE=#{answerType}
		, DESCRIPTION=#{description}
		, IMAGE_URL=#{imageUrl}
		, STATUS_CD=#{statusCd}
		, REQUIRED_FLG=#{requiredFlg}
		, SEQ_NO=#{seqNo}
		, BU_ID=#{buId}
		, UPDATED_DATE=NOW()
		, UPDATED_BY=#{updatedBy}
		WHERE ID=#{id}
	</update>
	
	<select id="getQuestionnaireAnswerList" resultType="QuestionnaireAnswerModelBean">
		SELECT 
		ans.ID
		, hd.ID as HEADER_ID
		, ans.ANSWER_JSON
		, ans.STATUS_CD
		, ans.CREATED_DATE
		, ans.CREATED_BY
		, ans.UPDATED_DATE
		, ans.UPDATED_BY
		FROM tb_questionnaire_ans_master ans
		join tb_questionnaire_q_master q on ans.QUESTION_ID = q.ID 
		join tb_questionnaire_header_master hd on q.HEADER_ID = hd.ID 
		where  hd.ID =#{headerId}
		and hd.STATUS_CD ='Y' and q.STATUS_CD ='Y' and ans.STATUS_CD ='Y'
		order by ans.ID,hd.ID,q.SEQ_NO 
		
	</select>
	
	<delete id="deleteQuestionnaireAnswerOption">
		DELETE FROM tb_questionnaire_ans_master WHERE QUESTION_ID=#{questionId}
	</delete>
	
	<insert id="createQuestionaireAnswerMaster" keyColumn="ID" keyProperty="id" useGeneratedKeys="true">
		INSERT INTO tb_questionnaire_ans_master
		( QUESTION_ID
		, ANSWER
		, STATUS_CD
		, CREATED_DATE
		, CREATED_BY
		, UPDATED_DATE
		, UPDATED_BY
		)
		VALUES(
		 #{questionId}
		, #{answer}
		, #{statusCd}
		, NOW()
		, #{createdBy}
		, NOW()
		, #{updatedBy}
		)
	</insert>
	
	<insert id="createQuesuionnaireRespondent" keyColumn="RESPONDENT_ID" keyProperty="id" useGeneratedKeys="true">
		INSERT INTO tb_questionnaire_respondents
		(
		 QUESTIONNAIRE_HEADER_ID
		, NAME
		, AGE
		, GENDER
		, LOCATION
		, CREATED_DATE
		)
		VALUES(
		 #{questionnaireHeaderId}
		, #{name}
		, #{age}
		, #{gender}
		, #{location}
		, NOW()
		)
	</insert>
	
	<select id="getquestionaireRepondentList" resultType="QuestionnaireRepondentsModelBean">
		SELECT 
		RESPONDENT_ID
		, QUESTIONNAIRE_HEADER_ID
		, NAME
		, AGE
		, GENDER
		, LOCATION
		, CREATED_DATE
		FROM tb_questionnaire_respondents
		WHERE QUESTIONNAIRE_HEADER_ID=#{id}
	</select>
	
	<select id="getquestionaireRepondentDetail" resultType="QuestionnaireRepondentsModelBean">
		SELECT 
		RESPONDENT_ID
		, QUESTIONNAIRE_HEADER_ID
		, NAME
		, AGE
		, GENDER
		, LOCATION
		, CREATED_DATE
		FROM tb_questionnaire_respondents
		WHERE RESPONDENT_ID=#{respondentId}
	</select>
	
	<insert id="createQuestionnaireResponse" keyColumn="RESPONSE_ID" keyProperty="id" useGeneratedKeys="true">
		INSERT INTO tb_questionnaire_responses
		(
			 RESPONDENT_ID
			, QUESTIONNAIRE_HEADER_ID
			, QUESTION_ID
			, RESPONSE_TEXT
			, CREATED_DATE
			)
			VALUES(
			 #{respondentId}
			, #{questionnaireHeaderId}
			, #{questionId}
			, #{responseText}
			, NOW()
		)
	</insert>
	
	<select id="getQuestionnaireResponseList" resultType="QuestionnaireResponsesModelBean">
		SELECT 
		RESPONSE_ID
		, RESPONDENT_ID
		, QUESTIONNAIRE_HEADER_ID
		, QUESTION_ID
		, RESPONSE_TEXT
		, CREATED_DATE
		FROM tb_questionnaire_responses
		WHERE RESPONDENT_ID=#{respondentId}
	</select>
	
	
	<select id="getQuestionnaireAnswerDetail" resultType="QuestionnaireAnswerModelBean">
		SELECT 
		ans.ID
		, hd.ID as HEADER_ID
		, ans.ANSWER_JSON
		, ans.STATUS_CD
		, ans.CREATED_DATE
		, ans.CREATED_BY
		, ans.UPDATED_DATE
		, ans.UPDATED_BY
		FROM tb_questionnaire_ans_master ans
		join tb_questionnaire_header_master hd on ans.HEADER_ID = hd.ID 
		where  hd.ID =#{headerId} and ans.ID=#{id}
		and hd.STATUS_CD ='Y'  and ans.STATUS_CD ='Y'
		order by ans.ID,hd.ID
	</select>
	
	<insert id="createQuestionnareAnswer" keyColumn="ID" keyProperty="id" useGeneratedKeys="true">
		INSERT INTO tb_questionnaire_ans_master
		(
			 HEADER_ID
			, ANSWER_JSON
			, STATUS_CD
			, CREATED_DATE
			, CREATED_BY
			, UPDATED_DATE
			, UPDATED_BY
			)
			VALUES(
			 #{headerId}
			, #{answerJson}
			, #{statusCd}
			, NOW()
			, #{createdBy}
			, NOW()
			, #{updatedBy}
		)
	</insert>
	<update id="updateQuestionnaireAnswer">
		UPDATE tb_questionnaire_ans_master
		SET 
		  ANSWER_JSON=#{answerJson}
		, STATUS_CD=#{statusCd}
		, UPDATED_DATE=NOW()
		, UPDATED_BY=#{updatedBy}
		WHERE ID=#{id}
		AND HEADER_ID=#{headerId}
	</update>
	

	
</mapper>