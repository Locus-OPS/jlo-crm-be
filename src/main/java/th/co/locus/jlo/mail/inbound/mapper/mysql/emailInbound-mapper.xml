<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="emailInbound">
	<select id="getEmailInboundList" resultType="InboundReceiveMailBean">
			SELECT 
				ei.ID,
			    ei.FORM_EMAIL,
			    ei.TO_EMAIL,
			    ei.CC_EMAIL,
			    ei.BCC_EMAIL,
			    ei.REPLY_TO_EMAIL,
			    ei.SUBJECT_EMAIL,
			    ei.STATUS_CD,
			    cb.code_name as statusName,
			    ei.PLAIN_CONTENT,
			    ei.HTML_CONTENT,
			    ei.DESCRIPTION, 
			    ei.BU_ID,
			    ei.CREATED_BY,
			    ei.CREATED_DATE,
			    ei.UPDATED_BY,
			    ei.UPDATED_DATE
			FROM tb_email_inbound ei 
			LEFT OUTER JOIN tb_codebook cb ON ei.STATUS_CD = cb.CODE_ID AND cb.CODE_TYPE = 'MAIL_IB_STATUS'
		 
		<where>
			 
			<if test="buId != null">
				AND ei.BU_ID = #{buId}
			</if>
			<if test="formEmail != null and formEmail != ''">
				<bind name="keyFormEmail" value="'%' + formEmail + '%'" />
				AND ei.FORM_EMAIL like #{keyFormEmail}
			</if>
			<if test="subjectEmail != null and subjectEmail != ''">
				<bind name="keySubjectEmail" value="'%' + subjectEmail + '%'" />
				 AND ei.SUBJECT_EMAIL like #{keySubjectEmail}
			</if>
			 
			<if test="startDate != null and startDate !=''">
				<![CDATA[ AND DATE(ei.CREATED_DATE) >= #{startDate, jdbcType=DATE}]]>
			</if>
			<if test="endDate != null and endDate !=''">
				<![CDATA[ AND DATE(ei.CREATED_DATE) <= #{endDate, jdbcType=DATE} ]]>
			</if>
			
			<if test="plainContent != null and plainContent != ''">
				<bind name="keyPlainContent" value="'%' + plainContent + '%'" />
		    		AND ei.PLAIN_CONTENT like #{keyPlainContent}
		  	</if>
		 
			 
		</where>
		ORDER BY ei.CREATED_DATE DESC
	</select>

	<select id="getEmailInboundData" resultType="InboundReceiveMailBean">
			SELECT 
				ei.ID,
			    ei.FORM_EMAIL,
			    ei.TO_EMAIL,
			    ei.CC_EMAIL,
			    ei.BCC_EMAIL,
			    ei.REPLY_TO_EMAIL,
			    ei.SUBJECT_EMAIL,
			    ei.STATUS_CD,
			    cb.code_name as statusName,
			    ei.PLAIN_CONTENT,
			    ei.HTML_CONTENT,
			    ei.DESCRIPTION, 
			    ei.BU_ID,
			    ei.CREATED_BY,
			    ei.CREATED_DATE,
			    ei.UPDATED_BY,
			    ei.UPDATED_DATE
			FROM tb_email_inbound ei 
			LEFT OUTER JOIN tb_codebook cb ON ei.STATUS_CD = cb.CODE_ID AND cb.CODE_TYPE = 'MAIL_IB_STATUS'
		 	WHERE ei.ID = #{id}	
			LIMIT 1
	</select>
 
	<select id="findEmailInboundById" resultType="InboundReceiveMailBean">
			SELECT EI.* FROM tb_email_inbound EI WHERE EI.ID = #{id}
	</select>

	<insert id="insertEmailInbound" keyColumn="ID" keyProperty="id" useGeneratedKeys="true">
		
			INSERT INTO `tb_email_inbound`
				(`FORM_EMAIL`,
				`TO_EMAIL`,
				`CC_EMAIL`,
				`BCC_EMAIL`,
				`REPLY_TO_EMAIL`,
				`SUBJECT_EMAIL`,
				`PLAIN_CONTENT`,
				`HTML_CONTENT`,
				`STATUS_CD`,
				`DESCRIPTION`, 
				`BU_ID`,
				`CREATED_BY`,
				`CREATED_DATE`,
				`UPDATED_BY`,
				`UPDATED_DATE`
				)
			VALUES
				(
				#{formEmail},
				#{toEmail},
				#{toCcEmail},
				#{toBccEmail},
				#{replyToEmail},
				#{subjectEmail},
				#{plainContent},
				#{htmlContent},
				#{statusCd},
				#{description}, 
				#{buId},
				#{createdBy},
				NOW(),
				#{updatedBy},
				NOW()
			)
		
	</insert>
	
	<select id="getEmailInboundAllList" resultType="InboundReceiveMailBean">
			SELECT EI.* FROM tb_email_inbound EI WHERE  EI.STATUS_CD = 01 ORDER BY EI.ID ASC
	</select>
	
	
	<update id="updateEmailInbound">
		UPDATE tb_email_inbound
		SET		 
		STATUS_CD = #{statusCd},		 
		UPDATED_DATE = NOW(),
		UPDATED_BY = #{updatedBy}
		WHERE
		(ID = #{id})
		
	</update>

	<select id="generateInboundEmailNumber" resultType="String"
		statementType="CALLABLE">
		call GEN_NEW_SEQUENCE(
		'EMAIL_SEQUENCE',
		#{buId, jdbcType = INTEGER, mode = IN}
		)
	</select>

</mapper>