<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="menu">
    <select id="getMenuList" resultType="menuModelBean">
		SELECT
		  m.ID,
		  m.NAME,
		  m.TYPE,
		  m.ICON,
		  m.LINK,
		  m.LANG,
		  m.ACTIVE_FLAG,
		  m.CREATED_BY,
		  m.CREATED_DATE,
		  m.UPDATED_BY,
		  m.UPDATED_DATE,
		  m.SEQ,
		  m.PARENT_MENU_ID,
		  m.API_PATH,
		  CONCAT(COALESCE(u1.FIRST_NAME,''), ' ',COALESCE(u1.LAST_NAME,'')) AS createdByName,
	      CONCAT(COALESCE(u2.FIRST_NAME,''), ' ',COALESCE( u2.LAST_NAME,'')) AS updatedByName
		FROM
		  tb_menu m
		  LEFT JOIN TB_USER u1 ON m.CREATED_BY = u1.ID
		 LEFT JOIN TB_USER u2 ON m.UPDATED_BY = u2.ID
		<where>
			<if test="name != null and name != ''">
				<bind name="_name" value="name + '%'" />
				AND m.NAME like #{_name}
			</if>
			<if test="parentMenuId != null and parentMenuId != ''">
				<bind name="_parentMenuId" value="parentMenuId + '%'" />
				AND m.PARENT_MENU_ID like #{_parentMenuId}
			</if>
		</where>
		<choose>
			<when test="sortColumn != null">
				<if test="sortColumn == 'name'">
					ORDER BY m.NAME ${sortDirection}
				</if>
				<if test="sortColumn == 'seq'">
					ORDER BY m.SEQ ${sortDirection}
				</if>
			</when>
			<otherwise>
				ORDER BY m.ID ASC
			</otherwise>
		</choose>
	</select>
    <select id="findMenuById" resultType="menuModelBean">
SELECT
  ID,
  NAME,
  TYPE,
  ICON,
  LINK,
  LANG,
  ACTIVE_FLAG,
  CREATED_BY,
  CREATED_DATE,
  UPDATED_BY,
  UPDATED_DATE,
  SEQ,
  PARENT_MENU_ID,
  API_PATH
FROM
  tb_menu
WHERE
  (
    ID = #{id})
	</select>
    <insert id="createMenu" keyColumn="ID" keyProperty="id" useGeneratedKeys="true">
INSERT INTO
  tb_menu (
    ID,
    NAME,
    TYPE,
    ICON,
    LINK,
    LANG,
    ACTIVE_FLAG,
    CREATED_BY,
    CREATED_DATE,
    SEQ,
    PARENT_MENU_ID,
    API_PATH
  )
VALUES
  (
    #{id}, #{name}, #{type}, #{icon}, #{link}, #{lang}, #{activeFlag}, #{createdBy}, NOW(), #{seq}, #{parentMenuId}, #{apiPath} )
	</insert>
    <update id="updateMenu">
UPDATE
  tb_menu
SET
  NAME = #{name}, TYPE = #{type}, ICON = #{icon}, LINK = #{link}, LANG = #{lang}, ACTIVE_FLAG = #{activeFlag}, UPDATED_BY = #{updatedBy}, UPDATED_DATE = NOW(), SEQ = #{seq}, PARENT_MENU_ID = #{parentMenuId}, API_PATH = #{apiPath}
WHERE
  (
    ID = #{id})
	</update>
    <delete id="deleteMenu">
DELETE FROM
  tb_menu
WHERE
  (
    ID = #{id})
	</delete>
	<select id="getMenuRespList" resultType="menuRespModelBean">
		SELECT
		  id,
		  name,
		  CASE WHEN type = '01' THEN 'sub' ELSE 'link' END AS type,
		  icon,
		  link,
		  parent_menu_id,
		  resp_flag,
		  api_path,
		  m.active_flag as 'use'
		FROM tb_menu m 
		  left join tb_responsibilities r on r.menu_id = m.id and r.role_code = #{roleCode}
		ORDER BY seq
	</select>
	<select id="getTokenMenuRespList" resultType="tokenMenuRespModelBean">
		SELECT
		  id,
		  resp_flag,
		  api_path,
		  m.active_flag as 'use'
		FROM tb_menu m 
		  left join tb_responsibilities r on r.menu_id = m.id and r.role_code = #{roleCode}
		ORDER BY seq
	</select>
</mapper>