<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="wftracking">
	<select id="getWfTrackingById" resultType="WorkflowTrackingBean"> 
       SELECT 
		    t.TASK_ID AS taskId,
		    CAST(t.EVENT_TYPE AS CHAR) AS eventTypeStr,
		    CAST(t.STATUS AS CHAR) as statusStr,
		    JSON_ARRAYAGG(
		        JSON_OBJECT(
		            'source', t.TASK_ID,
		            'target', t.ASSIGNMENT_ID,
		            'label', CONCAT('Transaction ID: ', t.TRANSACTION_ID)
		        )
		    ) AS links
		FROM 
		    tb_workflow_tracking t
		JOIN 
		    tb_wf_task ts ON t.TASK_ID = ts.TASK_ID
		WHERE 
		    t.TRACKING_ID = #{trackingId} 
		GROUP BY 
		    t.TASK_ID, t.EVENT_TYPE, t.STATUS;
	</select>
	
	<select id="getWftrackingNodeList" resultType="WorkflowTrackingNodeBean">
		select 
		twf.TASK_ID AS id
		,twf.TASK_NAME as taskName
		,GROUP_CONCAT(user1.FIRST_NAME,' ',user1.LAST_NAME SEPARATOR ', ') as label
		,ifnull((
		 	select 
		 	wt.STATUS
		 	from tb_workflow_tracking wt
		 	join (
		 		select 
		 		subwt.WORKFLOW_ID,subwt.TRANSACTION_ID,subwt.TASK_ID,MAX(subwt.TIMESTAMP) as TIMESTAMP
		 		from tb_workflow_tracking subwt
		 		group by subwt.WORKFLOW_ID,subwt.TASK_ID,subwt.TRANSACTION_ID
		 	) subwt on subwt.WORKFLOW_ID=wt.WORKFLOW_ID and subwt.TASK_ID=wt.TASK_ID and subwt.TIMESTAMP=wt.TIMESTAMP and subwt.TRANSACTION_ID=wt.TRANSACTION_ID
		 	where wt.TRANSACTION_ID=#{transactionId} and wf.WORKFLOW_ID=subwt.WORKFLOW_ID and wt.TASK_ID=twf.TASK_ID
		 	limit 1
		),'Pending') as status
		,ifnull((
		 	select 
		 	wt.TIMESTAMP  
		 	from tb_workflow_tracking wt
		 	join (
		 		select 
		 		subwt.WORKFLOW_ID,subwt.TRANSACTION_ID,subwt.TASK_ID,subwt.SYSTEM_ID,MAX(subwt.TIMESTAMP) as TIMESTAMP
		 		from tb_workflow_tracking subwt
		 		group by subwt.WORKFLOW_ID,subwt.TASK_ID,subwt.TRANSACTION_ID,subwt.SYSTEM_ID
		 	) subwt on subwt.WORKFLOW_ID=wt.WORKFLOW_ID and subwt.TASK_ID=wt.TASK_ID and subwt.TIMESTAMP=wt.TIMESTAMP 
		 	and subwt.TRANSACTION_ID=wt.TRANSACTION_ID and subwt.SYSTEM_ID=wt.SYSTEM_ID
		 	where wt.TRANSACTION_ID=#{transactionId} and wf.WORKFLOW_ID=subwt.WORKFLOW_ID and wt.TASK_ID=twf.TASK_ID and wt.SYSTEM_ID=twf.SYSTEM_ID
		 	limit 1
		),null) as updatedDate
		,'assets/img/profile_image_not_found.png' as avatarUrl
		from tb_workflow wf
		left join tb_wf_task twf on wf.WORKFLOW_ID = twf.WORKFLOW_ID 
		left join tb_wf_task_assignment wfa on twf.TASK_ID = wfa.TASK_ID 
		left join tb_user user1 on wfa.USER_ID =user1.ID 
		where wf.WORKFLOW_ID =#{workflowId} and twf.SYSTEM_ID=#{systemId}
		and twf.STATUS !='Cancelled' and wfa.STATUS !='Cancelled'
		group  by twf.TASK_ID
		order by twf.PRIORITY 
	</select>
	
	<select id="getWftrackingLinkList" resultType="WorkflowTrackingLinkBean">
			select wf.* from (
			select 
			twf.TASK_ID as source
			,ifnull((
				select 
				subtwf.TASK_ID
				from tb_workflow subwf
				join tb_wf_task subtwf on subwf.WORKFLOW_ID=subtwf.WORKFLOW_ID
				where subwf.WORKFLOW_ID=wf.WORKFLOW_ID and subtwf.STATUS not in('Cancelled') and subtwf.PRIORITY>twf.PRIORITY
				order by subtwf.PRIORITY 
				limit 1
			),null) as target
			, ifnull((
				select 
				subwt.STATUS
				from tb_workflow_tracking subwt
				join (
					select 
					subwt1.WORKFLOW_ID,subwt1.TRANSACTION_ID,subwt1.TASK_ID,MAX(subwt1.TIMESTAMP)as TIMESTAMP,subwt1.SYSTEM_ID
					from tb_workflow_tracking  subwt1
					where subwt1.WORKFLOW_ID=wf.WORKFLOW_ID and subwt1.TRANSACTION_ID =#{transactionId}
					group by subwt1.WORKFLOW_ID,subwt1.TRANSACTION_ID,subwt1.TASK_ID,subwt1.SYSTEM_ID
				) subwt1 on subwt.WORKFLOW_ID =subwt1.WORKFLOW_ID and subwt.TRANSACTION_ID=subwt1.TRANSACTION_ID 
				and subwt.`TIMESTAMP`=subwt1.`TIMESTAMP` and subwt.TASK_ID=subwt1.TASK_ID and subwt.SYSTEM_ID=subwt1.SYSTEM_ID
				where subwt.WORKFLOW_ID=wf.WORKFLOW_ID and subwt.TASK_ID=twf.TASK_ID and subwt.SYSTEM_ID=twf.SYSTEM_ID
				limit 1
			),'Pending') as label
			from tb_workflow wf
			join tb_wf_task twf on wf.WORKFLOW_ID =twf.WORKFLOW_ID 
			where wf.WORKFLOW_ID =#{workflowId} and twf.SYSTEM_ID=#{systemId} and twf.STATUS not in('Cancelled') 
			order by twf.PRIORITY
		) wf where wf.target is not null
	</select>
	
	<select id="getWftrackingDetail" resultType="WorkflowTrackingBean"> 
       SELECT 
		    t.TASK_ID AS taskId,
		    CAST(t.EVENT_TYPE AS CHAR) AS eventTypeStr,
		    CAST(t.STATUS AS CHAR) as statusStr,
		    JSON_ARRAYAGG(
		        JSON_OBJECT(
		            'source', t.TASK_ID,
		            'target', t.ASSIGNMENT_ID,
		            'label', CONCAT('Transaction ID: ', t.TRANSACTION_ID)
		        )
		    ) AS links
		FROM 
		    tb_workflow_tracking t
		JOIN 
		    tb_wf_task ts ON t.TASK_ID = ts.TASK_ID
		WHERE 
		    t.TRACKING_ID = #{trackingId} 
		GROUP BY 
		    t.TASK_ID, t.EVENT_TYPE, t.STATUS;
	</select>
	
	<select id="getWfTrackingListAll" resultType="WorkflowTrackingBean"> 
		SELECT 
		    wt.TRACKING_ID as trackingId,
		    wt.TRANSACTION_ID as transactionId,
		    wt.WORKFLOW_ID as workflowId,
		    wt.TASK_ID as taskId,
		    wt.ASSIGNMENT_ID as assignmentId,
		    wt.SYSTEM_ID as systemId,
		    CAST(wt.EVENT_TYPE AS CHAR) as eventTypeStr,
		    CAST(wt.STATUS AS CHAR)  as statusStr,
		    wt.TIMESTAMP as timestamps,
		    wt.NOTES as notes,
		    w.WORKFLOW_NAME AS workflowName,
		    t.TASK_NAME AS taskName,
		    a.user_id AS assignedUser,
		    s.system_name as systemName
		FROM 
		    tb_workflow_tracking wt
		JOIN 
		    tb_workflow w ON wt.WORKFLOW_ID = w.WORKFLOW_ID
		JOIN 
		    tb_wf_task t ON wt.TASK_ID = t.TASK_ID
		JOIN 
		    tb_wf_task_assignment a ON wt.ASSIGNMENT_ID = a.ASSIGNMENT_ID
		JOIN 
		    tb_workflow_system s ON wt.SYSTEM_ID = s.SYSTEM_ID
		ORDER BY 
		    wt.TIMESTAMP; 
	</select>
	
	<select id="getWftrackingByWorkflowId" resultType="WorkflowTrackingBean">
		select
		wt.TRACKING_ID as trackingId
		,wt.TRANSACTION_ID as transactionId 
		,wt.WORKFLOW_ID as workflowId
		,wt.SYSTEM_ID as systemId
		,sys.SYSTEM_NAME as systemName
		,(select subwt.EVENT_TYPE from tb_workflow_tracking subwt where subwt.TRACKING_ID=MAX(wt.TRACKING_ID)) as eventTypeStr
		,(select subwt.STATUS from tb_workflow_tracking subwt where subwt.TRACKING_ID=MAX(wt.TRACKING_ID)) as statusStr
		,MAX(wt.`TIMESTAMP`) as updatedDate
		from tb_workflow_tracking wt
		left join tb_workflow_system sys on wt.SYSTEM_ID=sys.SYSTEM_ID
		where wt.WORKFLOW_ID=#{workflowId}
		<if test="transactionId!='' and transactionId!=null">
			<bind name="bTransactionId" value="'%' + transactionId + '%'" />
			AND wt.TRANSACTION_ID like #{bTransactionId}
		</if>
		<if test="systemName!='' and systemName!=null">
			<bind name="bSystemName" value="'%' + systemName + '%'" />
			AND sys.SYSTEM_NAME like #{bSystemName}
		</if>
		group by wt.TRANSACTION_ID,wt.WORKFLOW_ID,wt.SYSTEM_ID,sys.SYSTEM_NAME
		order by wt.TRANSACTION_ID
	</select>
	
	<insert id="createWfTracking" keyColumn="TRACKING_ID" keyProperty="trackingId" useGeneratedKeys="true">
		INSERT INTO tb_workflow_tracking
		(
		TRANSACTION_ID
		, WORKFLOW_ID
		, TASK_ID
		, ASSIGNMENT_ID
		, SYSTEM_ID
		, EVENT_TYPE
		, STATUS
		, `TIMESTAMP`
		, NOTES
		)
		VALUES(
		#{transactionId}
		, #{workflowId}
		, #{taskId}
		, #{assignmentId}
		, #{systemId}
		, #{eventType}
		, #{status}
		, now()
		, #{notes}
		)
	</insert>
	
	<delete id="deleteWfTracking">
		DELETE FROM jlo_crm.tb_workflow_tracking WHERE TRACKING_ID=#{trackingId}
	</delete>
	
	
	
</mapper>