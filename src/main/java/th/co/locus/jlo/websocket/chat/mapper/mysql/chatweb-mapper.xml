<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="chatweb">
	<select id="getChatRoomList" resultType="ChatRoomModelBean">
		SELECT 
		room_id as roomId
		, room_name as roomName
		, created_at as createdAt
		FROM tb_msg_rooms
		order by room_name 
	</select>
	
	<select id="getChatRoomListByUserId" resultType="ChatRoomModelBean">
		select 
		ur.room_id  as roomId 
		,r.room_name as roomName
		,ur.joined_at as createdAt
		from tb_msg_user_rooms ur
		join tb_msg_rooms r on ur.room_id = r.room_id 
		where ur.user_id =#{currentUserId}
		<if test="roomName!=null and roomName!=''">
			<bind name="bRoomName" value="'%' + roomName + '%'" />
			and r.room_name like #{bRoomName}
		</if>
		order by r.room_name
	</select>
	
	<insert id="createChatRoom" keyColumn="room_id" keyProperty="roomId" useGeneratedKeys="true">
		INSERT INTO tb_msg_rooms
		(room_name, created_at,CREATED_DATE,CREATED_BY)
		VALUES(#{roomName}, now(),now(),#{currentUserId});
	</insert>
	
	<insert id="addUsertoRoom">
		INSERT INTO tb_msg_user_rooms(user_id, room_id, joined_at)
		values
		(
			#{userId}
			, #{roomId}
			, now()
		)
	</insert>
	
	<insert id="createChatMessage" keyColumn="message_id" keyProperty="messageId" useGeneratedKeys="true">
		INSERT INTO tb_msg_messages
		(sender_id, room_id, target_id, message_text, message_type, created_at)
		VALUES( #{senderId}, #{roomId}, #{targetId}, #{messageText}, #{messageType}, now())
	</insert>
	
	<select id="getPrivateChatMessageList" resultType="ChatMessageModelBean">
		SELECT 
		msg.message_id as messageId
		, msg.sender_id as senderId
		, msg.room_id as roomId
		, msg.target_id as targetId
		, msg.message_text as messageText
		, msg.message_type as messageType
		, msg.message_status as messageStatus
		, msg.created_at as createdAt
		FROM tb_msg_messages msg
		where msg.message_type ='private'
		and ((msg.sender_id=#{senderId} and msg.target_id=#{targetId}) or (msg.sender_id=#{targetId} and msg.target_id=#{senderId}))
		order by msg.created_at  desc 
	</select>
	
	<select id="getPublicChatMessageList" resultType="ChatMessageModelBean">
		SELECT 
		msg.message_id as messageId
		, msg.sender_id as senderId
		, concat(sd.FIRST_NAME,' ',sd.LAST_NAME) as senderName
		, sd.PICTURE_URL  as pictureUrl
		, msg.room_id as roomId
		, msg.target_id as targetId
		, msg.message_text as messageText
		, msg.message_type as messageType
		, msg.message_status as messageStatus
		, msg.created_at as createdAt
		FROM tb_msg_messages msg
		join tb_user sd on msg.sender_id = sd.ID 
		where msg.message_type ='public'
		and msg.room_id = #{roomId}
		order by msg.created_at  desc 
	</select>
	
	<select id="getBroadcastChatMessageList" resultType="ChatMessageModelBean">
		SELECT 
		msg.message_id as messageId
		, msg.sender_id as senderId
		, concat(sd.FIRST_NAME,' ',sd.LAST_NAME) as senderName
		, sd.PICTURE_URL  as pictureUrl
		, msg.room_id as roomId
		, msg.target_id as targetId
		, msg.message_text as messageText
		, msg.message_type as messageType
		, msg.message_status as messageStatus
		, msg.created_at as createdAt
		FROM tb_msg_messages msg
		join tb_user sd on msg.sender_id = sd.ID 
		where msg.message_type ='broadcast'
		and msg.room_id = #{roomId}
		order by msg.created_at  desc 
	</select>
	
	<select id="getChatList" resultType="ChatListModelBean">
		select 
		*
		from(
			select	
			target_user.targetId as id
			,u.PICTURE_URL as pictureUrl
			,concat(u.FIRST_NAME,' ',u.LAST_NAME) as chatName
			,target_user.messageId as lastMessageId
			,ms.message_text as messageText 
			,ms.message_status as messageStatus
			,'private' as messageType
			,ms.created_at as createdAt
			from (
			   select 
			   subtarget_user.targetId
			   ,max(subtarget_user.messageId) as messageId
			   from (
					select 
					ms.target_id as targetId 
					,max(ms.message_id) as messageId
					from tb_msg_messages ms
					where ms.sender_id =#{currentUser}
					and message_type ='private'
					group by ms.target_id 
					union 
					select 
					ms.sender_id as targetId 
					,max(ms.message_id) as messageId
					from tb_msg_messages ms
					where ms.target_id =#{currentUser}
					and message_type ='private'
					group by ms.sender_id
				) as subtarget_user
				group by subtarget_user.targetId
			) as target_user
			join tb_user u on target_user.targetId=u.id 
			join tb_msg_messages ms on target_user.messageId=ms.message_id
			
			union
			
			select 
			room.room_id as id
			,'./assets/img/chatgroup.png' as pictureUrl
			,room.room_name as chatName
			,room.messageId as lastMessageId
			,ms.message_text as messageText
			,ms.message_status as messageStatus
			,'public' as messageType
			,ms.created_at as createdAt
			from (select 
			ms.room_id
			,r.room_name 
			,max(message_id) as messageId 
			from tb_msg_messages ms
			join tb_msg_rooms r on ms.room_id =r.room_id 
			where ms.room_id  in (select ur.room_id from tb_msg_user_rooms ur where ur.user_id=#{currentUser})
			and ms.message_type ='public'
			group by ms.room_id,r.room_name 
			) room
			join tb_msg_messages ms on ms.message_id =room.messageId
		) chat
		where 1=1
		<if test="chatName!=null and chatName!=''">
			<bind name="bChatName" value="'%' + chatName + '%'" />
			and chat.chatName like #{bChatName}
		</if>
		order by chat.createdAt desc
		
	</select>
	
</mapper>